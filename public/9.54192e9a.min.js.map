{"version":3,"sources":["webpack:///9.54192e9a.min.js","webpack:///./src/page/reddit/actions.jsx","webpack:///./src/page/reddit/Index.jsx","webpack:///./src/page/reddit/components/Picker.jsx","webpack:///./src/page/reddit/components/Posts.jsx","webpack:///./src/page/reddit/configureStore.jsx","webpack:///./src/page/reddit/containers/AsyncApp.jsx","webpack:///./src/page/reddit/reducers.jsx","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["webpackJsonp",71,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","selectSubreddit","subreddit","type","SELECT_SUBREDDIT","invalidateSubreddit","INVALIDATE_SUBREDDIT","requestPosts","REQUEST_POSTS","receivePosts","json","RECEIVE_POSTS","posts","data","children","map","child","receivedAt","Date","now","fetchPosts","dispatch","_isomorphicFetch2","then","response","shouldFetchPosts","state","postsBySubreddit","isFetching","didInvalidate","fetchPostsIfNeeded","getState","Promise","resolve","Object","defineProperty","value","undefined","_isomorphicFetch",116,"_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_reactRedux","_configureStore","_configureStore2","_AsyncApp","_AsyncApp2","store","Root","_Component","this","getPrototypeOf","apply","arguments","createElement","Provider","Component",117,"Picker","_props","_onChange","onChange","options","e","option","propTypes","PropTypes","arrayOf","string","isRequired","func",118,"Posts","post","title","shape",119,"configureStore","initialState","createStoreWithMiddleware","_reducers2","_redux","_reduxThunk","_reduxThunk2","_reduxLogger","_reduxLogger2","_reducers","loggerMiddleware","applyMiddleware","createStore",120,"mapStateToProps","selectedSubreddit","_ref","items","lastUpdated","_actions","_Picker","_Picker2","_Posts","_Posts2","AsyncApp","_this","handleChange","nextSubreddit","handleRefreshClick","preventDefault","nextProps","toLocaleTimeString","href","onClick","style","opacity","array","bool","number","connect",121,"_defineProperty","action","assign","rootReducer","combineReducers",151,"fetch","bind",224,"normalizeName","name","String","test","toLowerCase","normalizeValue","Headers","headers","forEach","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","arrayBuffer","ArrayBuffer","Error","rejected","text","decode","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","split","bytes","shift","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"9.54192e9a.min.js","sourcesContent":["webpackJsonp([9,17],{\n\n/***/ 71:\n/*!*************************************!*\\\n  !*** ./src/page/reddit/actions.jsx ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.INVALIDATE_SUBREDDIT = exports.SELECT_SUBREDDIT = exports.RECEIVE_POSTS = exports.REQUEST_POSTS = undefined;\n\texports.selectSubreddit = selectSubreddit;\n\texports.invalidateSubreddit = invalidateSubreddit;\n\texports.fetchPostsIfNeeded = fetchPostsIfNeeded;\n\t\n\tvar _isomorphicFetch = __webpack_require__(/*! isomorphic-fetch */ 151);\n\t\n\tvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar REQUEST_POSTS = exports.REQUEST_POSTS = 'REQUEST_POSTS';\n\tvar RECEIVE_POSTS = exports.RECEIVE_POSTS = 'RECEIVE_POSTS';\n\tvar SELECT_SUBREDDIT = exports.SELECT_SUBREDDIT = 'SELECT_SUBREDDIT';\n\tvar INVALIDATE_SUBREDDIT = exports.INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT ';\n\t\n\tfunction selectSubreddit(subreddit) {\n\t    return {\n\t        type: SELECT_SUBREDDIT,\n\t        subreddit: subreddit\n\t    };\n\t}\n\t\n\tfunction invalidateSubreddit(subreddit) {\n\t    return {\n\t        type: INVALIDATE_SUBREDDIT,\n\t        subreddit: subreddit\n\t    };\n\t}\n\t//发送请求\n\tfunction requestPosts(subreddit) {\n\t    return {\n\t        type: REQUEST_POSTS,\n\t        subreddit: subreddit\n\t    };\n\t}\n\t//接受相应\n\tfunction receivePosts(subreddit, json) {\n\t    return {\n\t        type: RECEIVE_POSTS,\n\t        subreddit: subreddit,\n\t        posts: json.data.children.map(function (child) {\n\t            return child.data;\n\t        }),\n\t        receivedAt: Date.now()\n\t    };\n\t}\n\t\n\tfunction fetchPosts(subreddit) {\n\t    return function (dispatch) {\n\t        dispatch(requestPosts(subreddit));\n\t        return (0, _isomorphicFetch2.default)('http://www.subreddit.com/r/' + subreddit + '.json').then(function (response) {\n\t            return response.json();\n\t        }).then(function (json) {\n\t            return dispatch(receivePosts(subreddit, json));\n\t        });\n\t    };\n\t    //return dispatch => {\n\t    //    dispatch(requestPosts(subreddit))\n\t    //    return fetch(`http://www.subreddit.com/r/${subreddit}.json`)\n\t    //        .then(response => response.json())\n\t    //        .then(json => dispatch(receivePosts(subreddit, json)))\n\t    //}\n\t}\n\t\n\tfunction shouldFetchPosts(state, subreddit) {\n\t    var posts = state.postsBySubreddit[subreddit];\n\t    if (!posts) {\n\t        return true;\n\t    } else if (posts.isFetching) {\n\t        return false;\n\t    } else {\n\t        return posts.didInvalidate;\n\t    }\n\t}\n\t\n\tfunction fetchPostsIfNeeded(subreddit) {\n\t    return function (dispatch, getState) {\n\t        if (shouldFetchPosts(getState(), subreddit)) {\n\t            return dispatch(fetchPosts(subreddit));\n\t        } else {\n\t            return Promise.resolve();\n\t        }\n\t    };\n\t}\n\n/***/ },\n\n/***/ 116:\n/*!***********************************!*\\\n  !*** ./src/page/reddit/Index.jsx ***!\n  \\***********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(/*! react-redux */ 32);\n\t\n\tvar _configureStore = __webpack_require__(/*! ./configureStore */ 119);\n\t\n\tvar _configureStore2 = _interopRequireDefault(_configureStore);\n\t\n\tvar _AsyncApp = __webpack_require__(/*! ./containers/AsyncApp */ 120);\n\t\n\tvar _AsyncApp2 = _interopRequireDefault(_AsyncApp);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar store = (0, _configureStore2.default)();\n\t\n\tvar Root = function (_Component) {\n\t    _inherits(Root, _Component);\n\t\n\t    function Root() {\n\t        _classCallCheck(this, Root);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Root).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Root, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return _react2.default.createElement(\n\t                _reactRedux.Provider,\n\t                { store: store },\n\t                _react2.default.createElement(_AsyncApp2.default, null)\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Root;\n\t}(_react.Component);\n\n\texports.default = Root;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 117:\n/*!***********************************************!*\\\n  !*** ./src/page/reddit/components/Picker.jsx ***!\n  \\***********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Picker = function (_Component) {\n\t    _inherits(Picker, _Component);\n\t\n\t    function Picker() {\n\t        _classCallCheck(this, Picker);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Picker).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Picker, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var _props = this.props;\n\t            var value = _props.value;\n\t            var _onChange = _props.onChange;\n\t            var options = _props.options;\n\t\n\t\n\t            return _react2.default.createElement(\n\t                'span',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'h1',\n\t                    null,\n\t                    value\n\t                ),\n\t                _react2.default.createElement(\n\t                    'select',\n\t                    { onChange: function onChange(e) {\n\t                            return _onChange(e.target.value);\n\t                        },\n\t                        value: value },\n\t                    options.map(function (option) {\n\t                        return _react2.default.createElement(\n\t                            'option',\n\t                            { value: option, key: option },\n\t                            option\n\t                        );\n\t                    })\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Picker;\n\t}(_react.Component);\n\t\n\tPicker.propTypes = {\n\t    options: _react.PropTypes.arrayOf(_react.PropTypes.string.isRequired).isRequired,\n\t    value: _react.PropTypes.string.isRequired,\n\t    onChange: _react.PropTypes.func.isRequired\n\t};\n\texports.default = Picker;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 118:\n/*!**********************************************!*\\\n  !*** ./src/page/reddit/components/Posts.jsx ***!\n  \\**********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Posts = function (_Component) {\n\t    _inherits(Posts, _Component);\n\t\n\t    function Posts() {\n\t        _classCallCheck(this, Posts);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Posts).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Posts, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return _react2.default.createElement(\n\t                'ul',\n\t                null,\n\t                this.props.posts.map(function (post, i) {\n\t                    return _react2.default.createElement(\n\t                        'li',\n\t                        { key: i },\n\t                        post.title\n\t                    );\n\t                })\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Posts;\n\t}(_react.Component);\n\t\n\tPosts.propTypes = {\n\t    posts: _react.PropTypes.arrayOf(_react.PropTypes.shape({\n\t        title: _react.PropTypes.string.isRequired\n\t    }).isRequired).isRequired\n\t};\n\texports.default = Posts;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 119:\n/*!********************************************!*\\\n  !*** ./src/page/reddit/configureStore.jsx ***!\n  \\********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = configureStore;\n\t\n\tvar _redux = __webpack_require__(/*! redux */ 24);\n\t\n\tvar _reduxThunk = __webpack_require__(/*! redux-thunk */ 89);\n\t\n\tvar _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\t\n\tvar _reduxLogger = __webpack_require__(/*! redux-logger */ 88);\n\t\n\tvar _reduxLogger2 = _interopRequireDefault(_reduxLogger);\n\t\n\tvar _reducers = __webpack_require__(/*! ./reducers */ 121);\n\t\n\tvar _reducers2 = _interopRequireDefault(_reducers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar loggerMiddleware = (0, _reduxLogger2.default)();\n\t\n\tvar createStoreWithMiddleware = (0, _redux.applyMiddleware)(_reduxThunk2.default, loggerMiddleware)(_redux.createStore);\n\t\n\tfunction configureStore(initialState) {\n\t    return createStoreWithMiddleware(_reducers2.default, initialState);\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 120:\n/*!*************************************************!*\\\n  !*** ./src/page/reddit/containers/AsyncApp.jsx ***!\n  \\*************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(/*! react-redux */ 32);\n\t\n\tvar _actions = __webpack_require__(/*! ../actions */ 71);\n\t\n\tvar _Picker = __webpack_require__(/*! ../components/Picker */ 117);\n\t\n\tvar _Picker2 = _interopRequireDefault(_Picker);\n\t\n\tvar _Posts = __webpack_require__(/*! ../components/Posts */ 118);\n\t\n\tvar _Posts2 = _interopRequireDefault(_Posts);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar AsyncApp = function (_Component) {\n\t    _inherits(AsyncApp, _Component);\n\t\n\t    function AsyncApp(props) {\n\t        _classCallCheck(this, AsyncApp);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AsyncApp).call(this, props));\n\t\n\t        _this.handleChange = function (nextSubreddit) {\n\t            _this.dispatch((0, _actions.selectSubreddit)(nextSubreddit));\n\t        };\n\t\n\t        _this.handleRefreshClick = function (e) {\n\t            e.preventDefault();\n\t            //清除缓存\n\t            _this.dispatch((0, _actions.invalidateSubreddit)(_this.props.selectedSubreddit));\n\t            //重新获取数据\n\t            _this.dispatch((0, _actions.fetchPostsIfNeeded)(_this.props.selectedSubreddit));\n\t        };\n\t\n\t        _this.dispatch = _this.props.dispatch;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(AsyncApp, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            //组件渲染成功之后，获取一次数据。\n\t            // selectedSubreddit 指的是reactjs或者frontend\n\t            this.dispatch((0, _actions.fetchPostsIfNeeded)(this.props.selectedSubreddit));\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(nextProps) {\n\t            // 组件接受props时调用？\n\t            if (nextProps.selectedSubreddit !== this.props.selectedSubreddit) {\n\t                this.dispatch((0, _actions.fetchPostsIfNeeded)(nextProps.selectedSubreddit));\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var _props = this.props;\n\t            var selectedSubreddit = _props.selectedSubreddit;\n\t            var posts = _props.posts;\n\t            var isFetching = _props.isFetching;\n\t            var lastUpdated = _props.lastUpdated;\n\t\n\t            return _react2.default.createElement(\n\t                'div',\n\t                null,\n\t                _react2.default.createElement(_Picker2.default, { value: selectedSubreddit,\n\t                    onChange: this.handleChange,\n\t                    options: ['reactjs', 'frontend'] }),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    lastUpdated && _react2.default.createElement(\n\t                        'span',\n\t                        null,\n\t                        'Last updated at ',\n\t                        new Date(lastUpdated).toLocaleTimeString(),\n\t                        '.',\n\t                        ' '\n\t                    ),\n\t                    !isFetching && _react2.default.createElement(\n\t                        'a',\n\t                        { href: '#', onClick: this.handleRefreshClick },\n\t                        ' Refresh '\n\t                    )\n\t                ),\n\t                isFetching && posts.length === 0 && _react2.default.createElement(\n\t                    'h2',\n\t                    null,\n\t                    'Loading...'\n\t                ),\n\t                !isFetching && posts.length === 0 && _react2.default.createElement(\n\t                    'h2',\n\t                    null,\n\t                    'Empty.'\n\t                ),\n\t                posts.length > 0 && _react2.default.createElement(\n\t                    'div',\n\t                    { style: { opacity: isFetching ? 0.5 : 1 } },\n\t                    _react2.default.createElement(_Posts2.default, { posts: posts })\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return AsyncApp;\n\t}(_react.Component);\n\t\n\tAsyncApp.propTypes = {\n\t    selectedSubreddit: _react.PropTypes.string.isRequired,\n\t    posts: _react.PropTypes.array.isRequired,\n\t    isFetching: _react.PropTypes.bool.isRequired,\n\t    lastUpdated: _react.PropTypes.number,\n\t    dispatch: _react.PropTypes.func.isRequired\n\t};\n\t\n\t\n\tfunction mapStateToProps(state) {\n\t    var selectedSubreddit = state.selectedSubreddit;\n\t    var postsBySubreddit = state.postsBySubreddit;\n\t\n\t    var _ref = postsBySubreddit[selectedSubreddit] || {\n\t        isFetching: true,\n\t        items: []\n\t    };\n\t\n\t    var isFetching = _ref.isFetching;\n\t    var lastUpdated = _ref.lastUpdated;\n\t    var posts = _ref.items;\n\t\n\t\n\t    return {\n\t        selectedSubreddit: selectedSubreddit,\n\t        posts: posts,\n\t        isFetching: isFetching,\n\t        lastUpdated: lastUpdated\n\t    };\n\t}\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps)(AsyncApp);\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 121:\n/*!**************************************!*\\\n  !*** ./src/page/reddit/reducers.jsx ***!\n  \\**************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _redux = __webpack_require__(/*! redux */ 24);\n\t\n\tvar _actions = __webpack_require__(/*! ./actions */ 71);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction selectedSubreddit() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? 'reactjs' : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    switch (action.type) {\n\t        case _actions.SELECT_SUBREDDIT:\n\t            return action.subreddit;\n\t        default:\n\t            return state;\n\t    }\n\t}\n\t\n\tfunction posts() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? {\n\t        isFetching: false,\n\t        didInvalidate: false,\n\t        items: []\n\t    } : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    switch (action.type) {\n\t        case _actions.INVALIDATE_SUBREDDIT:\n\t            return Object.assign({}, state, {\n\t                didInvalidate: true\n\t            });\n\t        case _actions.REQUEST_POSTS:\n\t            return Object.assign({}, state, {\n\t                isFetching: true,\n\t                didInvalidate: false\n\t            });\n\t        case _actions.RECEIVE_POSTS:\n\t            return Object.assign({}, state, {\n\t                isFetching: false,\n\t                didInvalidate: false,\n\t                items: action.posts,\n\t                lastUpdated: action.receivedAt\n\t            });\n\t        default:\n\t            return state;\n\t    }\n\t}\n\t\n\tfunction postsBySubreddit() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    switch (action.type) {\n\t        case _actions.INVALIDATE_SUBREDDIT:\n\t        case _actions.RECEIVE_POSTS:\n\t        case _actions.REQUEST_POSTS:\n\t            return Object.assign({}, state, _defineProperty({}, action.subreddit, posts(state[action.subreddit], action)));\n\t        default:\n\t            return state;\n\t    }\n\t}\n\t\n\tvar rootReducer = (0, _redux.combineReducers)({\n\t    postsBySubreddit: postsBySubreddit,\n\t    selectedSubreddit: selectedSubreddit\n\t});\n\t\n\texports.default = rootReducer;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 151:\n/*!****************************************************!*\\\n  !*** ./~/isomorphic-fetch/fetch-npm-browserify.js ***!\n  \\****************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(/*! whatwg-fetch */ 224);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n\n/***/ 224:\n/*!*********************************!*\\\n  !*** ./~/whatwg-fetch/fetch.js ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\n\t(function() {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  var support = {\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob();\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this._initBody(bodyInit)\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var status = (xhr.status === 1223) ? 204 : xhr.status\n\t        if (status < 100 || status > 599) {\n\t          reject(new TypeError('Network request failed'))\n\t          return\n\t        }\n\t        var options = {\n\t          status: status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})();\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 9.54192e9a.min.js\n **/","import fetch from 'isomorphic-fetch'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\nexport const INVALIDATE_SUBREDDIT  = 'INVALIDATE_SUBREDDIT '\n\nexport function selectSubreddit(subreddit) {\n    return {\n        type: SELECT_SUBREDDIT,\n        subreddit\n    }\n}\n\nexport function invalidateSubreddit(subreddit) {\n    return {\n        type: INVALIDATE_SUBREDDIT ,\n        subreddit\n    }\n}\n//发送请求\nfunction requestPosts(subreddit) {\n    return {\n        type: REQUEST_POSTS,\n        subreddit\n    }\n}\n//接受相应\nfunction receivePosts(subreddit, json) {\n    return {\n        type: RECEIVE_POSTS,\n        subreddit,\n        posts: json.data.children.map(child => child.data),\n        receivedAt: Date.now()\n    }\n}\n\nfunction fetchPosts(subreddit) {\n    return function(dispatch){\n        dispatch(requestPosts(subreddit))\n        return fetch(`http://www.subreddit.com/r/${subreddit}.json`)\n            .then(response => response.json())\n            .then(json => dispatch(receivePosts(subreddit, json)))\n    };\n    //return dispatch => {\n    //    dispatch(requestPosts(subreddit))\n    //    return fetch(`http://www.subreddit.com/r/${subreddit}.json`)\n    //        .then(response => response.json())\n    //        .then(json => dispatch(receivePosts(subreddit, json)))\n    //}\n}\n\nfunction shouldFetchPosts(state, subreddit) {\n    const posts = state.postsBySubreddit[subreddit]\n    if (!posts) {\n        return true\n    } else if (posts.isFetching) {\n        return false\n    } else {\n        return posts.didInvalidate\n    }\n}\n\nexport function fetchPostsIfNeeded(subreddit) {\n    return (dispatch, getState) => {\n        if (shouldFetchPosts(getState(), subreddit)) {\n            return dispatch(fetchPosts(subreddit))\n        }else{\n            return Promise.resolve();\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/actions.jsx\n **/","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from './configureStore'\nimport AsyncApp from './containers/AsyncApp'\n\nconst store = configureStore()\n\nexport default class Root extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <AsyncApp />\n            </Provider>\n        )\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/Index.jsx\n **/","import React, { Component, PropTypes } from 'react'\n\nexport default class Picker extends Component {\n    static propTypes = {\n        options: PropTypes.arrayOf(\n            PropTypes.string.isRequired\n        ).isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired\n    };\n\n    render() {\n        const { value, onChange, options } = this.props\n\n        return (\n            <span>\n            <h1>{value}</h1>\n            <select onChange={e => onChange(e.target.value)}\n                    value={value}>\n                {options.map(option =>\n                    <option value={option} key={option}>\n                        {option}\n                    </option>)\n                }\n            </select>\n        </span>\n        )\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/components/Picker.jsx\n **/","import React, { PropTypes, Component } from 'react'\n\nexport default class Posts extends Component {\n    static propTypes = {\n        posts: PropTypes.arrayOf(PropTypes.shape({\n            title: PropTypes.string.isRequired\n        }).isRequired).isRequired\n    };\n\n    render() {\n        return (\n            <ul>\n                {this.props.posts.map((post, i) =>\n                    <li key={i}>{post.title}</li>\n                )}\n            </ul>\n        )\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/components/Posts.jsx\n **/","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nconst createStoreWithMiddleware = applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n)(createStore)\n\nexport default function configureStore(initialState) {\n    return createStoreWithMiddleware(rootReducer, initialState)\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/configureStore.jsx\n **/","import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { selectSubreddit, fetchPostsIfNeeded, invalidateSubreddit } from '../actions'\nimport Picker from '../components/Picker'\nimport Posts from '../components/Posts'\n\nclass AsyncApp extends Component {\n    constructor(props) {\n        super(props);\n        this.dispatch = this.props.dispatch;\n    };\n\n    static propTypes = {\n        selectedSubreddit: PropTypes.string.isRequired,\n        posts: PropTypes.array.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        lastUpdated: PropTypes.number,\n        dispatch: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n        //组件渲染成功之后，获取一次数据。\n        // selectedSubreddit 指的是reactjs或者frontend\n        this.dispatch(fetchPostsIfNeeded(this.props.selectedSubreddit))\n    };\n\n    componentWillReceiveProps(nextProps) {\n        // 组件接受props时调用？\n        if (nextProps.selectedSubreddit !== this.props.selectedSubreddit) {\n            this.dispatch(fetchPostsIfNeeded(nextProps.selectedSubreddit))\n        }\n    };\n\n    handleChange = (nextSubreddit)=> {\n        this.dispatch(selectSubreddit(nextSubreddit))\n    };\n\n    handleRefreshClick = (e)=> {\n        e.preventDefault();\n        //清除缓存\n        this.dispatch(invalidateSubreddit(this.props.selectedSubreddit));\n        //重新获取数据\n        this.dispatch(fetchPostsIfNeeded(this.props.selectedSubreddit))\n    };\n\n    render() {\n        const { selectedSubreddit, posts, isFetching, lastUpdated } = this.props;\n        return (\n            <div>\n                <Picker value={selectedSubreddit}\n                        onChange={this.handleChange}\n                        options={[ 'reactjs', 'frontend' ]}/>\n                <p>\n                    {lastUpdated && <span>Last updated at {new Date(lastUpdated).toLocaleTimeString()}.{' '}</span>}\n                    {!isFetching && <a href='#' onClick={this.handleRefreshClick}> Refresh </a>}\n                </p>\n                {isFetching && posts.length === 0 && <h2>Loading...</h2>}\n                {!isFetching && posts.length === 0 && <h2>Empty.</h2>}\n                {posts.length > 0 && <div style={{ opacity: isFetching ? 0.5 : 1 }}><Posts posts={posts}/></div>}\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const { selectedSubreddit, postsBySubreddit } = state\n    const {\n        isFetching,\n        lastUpdated,\n        items: posts\n        } = postsBySubreddit[selectedSubreddit] || {\n        isFetching: true,\n        items: []\n    };\n\n    return {\n        selectedSubreddit,\n        posts,\n        isFetching,\n        lastUpdated\n    }\n}\n\nexport default connect(mapStateToProps)(AsyncApp)\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/containers/AsyncApp.jsx\n **/","import { combineReducers } from 'redux'\nimport {\n    SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT ,\n    REQUEST_POSTS, RECEIVE_POSTS\n} from './actions'\n\nfunction selectedSubreddit(state = 'reactjs', action) {\n    switch (action.type) {\n        case SELECT_SUBREDDIT:\n            return action.subreddit\n        default:\n            return state\n    }\n}\n\nfunction posts(state = {\n    isFetching: false,\n    didInvalidate: false,\n    items: []\n}, action) {\n    switch (action.type) {\n        case INVALIDATE_SUBREDDIT :\n            return Object.assign({}, state, {\n                didInvalidate: true\n            })\n        case REQUEST_POSTS:\n            return Object.assign({}, state, {\n                isFetching: true,\n                didInvalidate: false\n            })\n        case RECEIVE_POSTS:\n            return Object.assign({}, state, {\n                isFetching: false,\n                didInvalidate: false,\n                items: action.posts,\n                lastUpdated: action.receivedAt\n            })\n        default:\n            return state\n    }\n}\n\nfunction postsBySubreddit(state = { }, action) {\n    switch (action.type) {\n        case INVALIDATE_SUBREDDIT :\n        case RECEIVE_POSTS:\n        case REQUEST_POSTS:\n            return Object.assign({}, state, {\n                [action.subreddit]: posts(state[action.subreddit], action)\n            })\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    postsBySubreddit,\n    selectedSubreddit\n})\n\nexport default rootReducer\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/reddit/reducers.jsx\n **/","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isomorphic-fetch/fetch-npm-browserify.js\n ** module id = 151\n ** module chunks = 9\n **/","(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 224\n ** module chunks = 9\n **/"],"sourceRoot":""}