{"version":3,"sources":["webpack:///0.js","webpack:///./src/framework/page/Page.jsx?1ba2","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/~/component-emitter/index.js","webpack:///./~/superagent/~/reduce-component/index.js","webpack:///./src/page/dashboard/Dashboard.jsx"],"names":["webpackJsonp",10,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","Object","defineProperty","value","_react","_react2","_antd","_reactRouter","_HeaderMenu","_SidebarMenu","_Settings","_Settings2","_pubsubmsg","_pubsubmsg2","Page","createClass","displayName","getInitialState","pageHeader","showPageAnimate","pageAnimate","getDefaultProps","loading","animConfig","opacity","translateY","getPageHeaderDateByMenu","currentMenu","getCurrentSidebarMenu","parentText","title","text","breadcrumbItems","i","length","push","setPageHeader","pageHeaderJsx","pageHeaderDate","this","props","header","state","createElement","className","QueueAnim","key","currentHeaderMenu","getCurrentHeaderMenu","Breadcrumb","Item","Link","to","path","items","item","breadcrumb","setState","switchLoadingMessage","hideLoading","componentWillUpdate","componentDidUpdate","componentWillMount","componentDidMount","_this","subscribeOnceAcceptOldMsg","componentWillUnmount","render","pageChildren","Spin","spining","children","delay",11,57,"noop","isHost","str","toString","call","isObject","serialize","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","encodeURIComponent","parseString","parts","pair","split","len","decodeURIComponent","parseHeader","index","line","field","lines","fields","pop","indexOf","slice","toLowerCase","trim","isJSON","mime","test","type","shift","params","reduce","Response","req","options","xhr","method","responseType","responseText","statusText","setStatusProperties","status","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","body","parseBody","response","Request","url","self","Emitter","_query","_header","on","err","res","e","Error","parse","original","rawResponse","callback","emit","new_err","request","end","arguments","del","fn","root","window","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","prototype","get","ct","statusCode","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","use","timeout","ms","_timeout","clearTimeout","_timer","abort","aborted","set","unset","getHeader","_parser","accept","auth","user","pass","btoa","query","name","_formData","FormData","append","attach","file","filename","send","data","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","loaded","hasListeners","onprogress","upload","setTimeout","open","contentType","setRequestHeader","then","fulfill","reject","head","patch","post","put",58,"mixin","addEventListener","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","listeners",59,"arr","initial","idx","curr",91,"_reactDom","_Page","_Page2","_superagent","_superagent2","SetIntervalMixin","intervals","setInterval","_setInterval","map","clearInterval","_ref","_ref$data","undefined","_ref$end","that","Dashboard","seconds","testAjax","propTypes","PropTypes","string","mixins","statics","customMethod","foo","range","order","console","log","shouldComponentUpdate","nextProps","nextState","prevProps","prevState","componentWillReceiveProps","tick","handleClick","Button","onClick",459],"mappings":"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","file":"0.js","sourcesContent":["webpackJsonp([0,13],{\n\n/***/ 10:\n/*!*************************************!*\\\n  !*** ./src/framework/page/Page.jsx ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(/*! ./style.less */ 11);\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 9);\n\t\n\tvar _reactRouter = __webpack_require__(/*! react-router */ 13);\n\t\n\tvar _HeaderMenu = __webpack_require__(/*! ../HeaderMenu */ 21);\n\t\n\tvar _SidebarMenu = __webpack_require__(/*! ../SidebarMenu */ 18);\n\t\n\tvar _Settings = __webpack_require__(/*! ../settings/Settings */ 14);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _pubsubmsg = __webpack_require__(/*! ../common/pubsubmsg */ 16);\n\t\n\tvar _pubsubmsg2 = _interopRequireDefault(_pubsubmsg);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Page = _react2.default.createClass({\n\t    displayName: 'Page',\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            pageHeader: '',\n\t            showPageAnimate: _Settings2.default.pageAnimate()\n\t        };\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            loading: false,\n\t            animConfig: [{ opacity: [1, 0], translateY: [0, 50] }, { opacity: [1, 0], translateY: [0, -50] }]\n\t        };\n\t    },\n\t    getPageHeaderDateByMenu: function getPageHeaderDateByMenu() {\n\t        var currentMenu = (0, _SidebarMenu.getCurrentSidebarMenu)();\n\t        var parentText = currentMenu ? currentMenu.parentText : [];\n\t        var title = currentMenu ? currentMenu.text : '';\n\t        var breadcrumbItems = [];\n\t        for (var i = 0; i < parentText.length; i++) {\n\t            breadcrumbItems.push({ text: parentText[i] });\n\t        }\n\t        breadcrumbItems.push({ text: title });\n\t        return {\n\t            title: title,\n\t            breadcrumbItems: breadcrumbItems\n\t        };\n\t    },\n\t    setPageHeader: function setPageHeader() {\n\t        var pageHeaderJsx = '';\n\t        var pageHeaderDate = null;\n\t        if (this.props.header === 'auto') {\n\t            pageHeaderDate = this.getPageHeaderDateByMenu();\n\t        } else if (_typeof(this.props.header) == 'object') {\n\t            if (this.props.header.title || this.props.header.breadcrumbItems) {\n\t                pageHeaderDate = {};\n\t                if (this.props.header.title === 'auto') {\n\t                    pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\n\t                } else if (this.props.header.title) {\n\t                    pageHeaderDate.title = this.props.header.title;\n\t                } else {\n\t                    pageHeaderDate.title = ' ';\n\t                }\n\t                if (this.props.header.breadcrumbItems === 'auto') {\n\t                    pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems;\n\t                } else if (this.props.header.breadcrumbItems) {\n\t                    pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\n\t                } else {\n\t                    pageHeaderDate.breadcrumbItems = '';\n\t                }\n\t            } else {\n\t                if (this.state.showPageAnimate) {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        _react2.default.createElement(\n\t                            _antd.QueueAnim,\n\t                            { animConfig: this.props.animConfig },\n\t                            _react2.default.createElement(\n\t                                'div',\n\t                                { key: 'queue-anim-item1' },\n\t                                this.props.header\n\t                            )\n\t                        )\n\t                    );\n\t                } else {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        this.props.header\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        if (pageHeaderDate) {\n\t            var currentHeaderMenu = (0, _HeaderMenu.getCurrentHeaderMenu)();\n\t            var breadcrumbItems = [];\n\t            if (currentHeaderMenu) {\n\t                breadcrumbItems.push(_react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: 'page-breadcrumb-item-home' },\n\t                    _react2.default.createElement(\n\t                        _reactRouter.Link,\n\t                        { to: currentHeaderMenu.path },\n\t                        currentHeaderMenu.text\n\t                    )\n\t                ));\n\t            }\n\t            var items = pageHeaderDate.breadcrumbItems;\n\t            for (var i = 0; i < items.length; i++) {\n\t                var item = items[i];\n\t                var key = 'page-breadcrumb-item' + i;\n\t                breadcrumbItems.push(item.path ? _react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: key },\n\t                    _react2.default.createElement(\n\t                        _reactRouter.Link,\n\t                        { to: item.path },\n\t                        item.text\n\t                    )\n\t                ) : _react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: key },\n\t                    item.text\n\t                ));\n\t            }\n\t            var breadcrumb = '';\n\t            if (pageHeaderDate.breadcrumbItems) {\n\t                breadcrumb = _react2.default.createElement(\n\t                    _antd.Breadcrumb,\n\t                    null,\n\t                    breadcrumbItems\n\t                );\n\t            }\n\t            if (this.state.showPageAnimate) {\n\t                pageHeaderJsx = _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-header' },\n\t                    _react2.default.createElement(\n\t                        _antd.QueueAnim,\n\t                        { animConfig: this.props.animConfig },\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { key: 'queue-anim-item1' },\n\t                            _react2.default.createElement(\n\t                                'h1',\n\t                                { className: 'admin-page-header-title' },\n\t                                pageHeaderDate.title\n\t                            ),\n\t                            breadcrumb\n\t                        )\n\t                    )\n\t                );\n\t            } else {\n\t                pageHeaderJsx = _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-header' },\n\t                    _react2.default.createElement(\n\t                        'h1',\n\t                        { className: 'admin-page-header-title' },\n\t                        pageHeaderDate.title\n\t                    ),\n\t                    breadcrumb\n\t                );\n\t            }\n\t        }\n\t        this.setState({\n\t            pageHeader: pageHeaderJsx\n\t        });\n\t    },\n\t    switchLoadingMessage: function switchLoadingMessage() {\n\t\n\t        if (this.props.loading) {\n\t            if (!this.hideLoading) {\n\t                //this.hideLoading = message.loading('正在加载...', 0);\n\t            }\n\t        } else {\n\t                if (this.hideLoading) {\n\t                    this.hideLoading();\n\t                }\n\t            }\n\t    },\n\t    componentWillUpdate: function componentWillUpdate() {\n\t        this.switchLoadingMessage();\n\t    },\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        this.switchLoadingMessage();\n\t    },\n\t    componentWillMount: function componentWillMount() {},\n\t    componentDidMount: function componentDidMount() {\n\t        var _this = this;\n\t        _pubsubmsg2.default.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\n\t            _this.setPageHeader();\n\t        });\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        if (this.hideLoading) {\n\t            this.hideLoading();\n\t        }\n\t    },\n\t    render: function render() {\n\t        var pageChildren = _react2.default.createElement(\n\t            _antd.Spin,\n\t            { spining: this.props.loading },\n\t            this.props.children\n\t        );\n\t        if (this.state.showPageAnimate) {\n\t            pageChildren = _react2.default.createElement(\n\t                _antd.QueueAnim,\n\t                { animConfig: this.props.animConfig, delay: 100 },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { key: 'queue-anim-item1' },\n\t                    pageChildren\n\t                )\n\t            );\n\t        }\n\t        return _react2.default.createElement(\n\t            'div',\n\t            { className: \"admin-page \" },\n\t            _react2.default.createElement(\n\t                'div',\n\t                { className: 'admin-page-content' },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-content-inner' },\n\t                    this.state.pageHeader,\n\t                    pageChildren\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\texports.default = Page;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 11:\n/*!***************************************!*\\\n  !*** ./src/framework/page/style.less ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 57:\n/*!************************************!*\\\n  !*** ./~/superagent/lib/client.js ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(/*! emitter */ 58);\n\tvar reduce = __webpack_require__(/*! reduce */ 59);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  root = this;\n\t}\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj === Object(obj);\n\t}\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t        }\n\t      }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (Array.isArray(val)) {\n\t    return val.forEach(function(v) {\n\t      pushEncodedKeyValuePair(pairs, key, v);\n\t    });\n\t  }\n\t  pairs.push(encodeURIComponent(key)\n\t    + '=' + encodeURIComponent(val));\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var parts;\n\t  var pair;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    parts = pair.split('=');\n\t    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this.setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this.setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this.parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype.parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  Emitter.call(this);\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {};\n\t  this._header = {};\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    if (res.status >= 200 && res.status < 300) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t    new_err.original = err;\n\t    new_err.response = res;\n\t    new_err.status = res.status;\n\t\n\t    self.callback(new_err, res);\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\tRequest.prototype.use = function(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.timeout = function(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.clearTimeout = function(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  if (this.aborted) return;\n\t  this.aborted = true;\n\t  this.xhr.abort();\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tRequest.prototype.getHeader = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Force given parser\n\t *\n\t * Sets the body parser no matter type.\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.parse = function(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass){\n\t  var str = btoa(user + ':' + pass);\n\t  this.set('Authorization', 'Basic ' + str);\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.field = function(name, val){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(field, file, filename);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Send `data`, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // querystring\n\t *       request.get('/search')\n\t *         .end(callback)\n\t *\n\t *       // multiple data \"writes\"\n\t *       request.get('/search')\n\t *         .send({ search: 'query' })\n\t *         .send({ range: '1..5' })\n\t *         .send({ order: 'desc' })\n\t *         .end(callback)\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t  *      request.post('/user')\n\t  *        .send('name=tobi')\n\t  *        .send('species=ferret')\n\t  *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this.getHeader('Content-Type');\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    if (!type) this.type('form');\n\t    type = this.getHeader('Content-Type');\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || isHost(data)) return this;\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.withCredentials = function(){\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var query = this._query.join('&');\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self.timeoutError();\n\t      if (self.aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  if (query) {\n\t    query = request.serializeObject(query);\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t\n\t  // initiate request\n\t  xhr.open(this.method, this.url, true);\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this.getHeader('Content-Type');\n\t    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Faux promise support\n\t *\n\t * @param {Function} fulfill\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\tRequest.prototype.then = function (fulfill, reject) {\n\t  return this.end(function(err, res) {\n\t    err ? reject(err) : fulfill(res);\n\t  });\n\t}\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new Request('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (1 == arguments.length) {\n\t    return new Request('GET', method);\n\t  }\n\t\n\t  return new Request(method, url);\n\t}\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest.del = del;\n\trequest.delete = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n\n/***/ 58:\n/*!***************************************************!*\\\n  !*** ./~/superagent/~/component-emitter/index.js ***!\n  \\***************************************************/\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 59:\n/*!**************************************************!*\\\n  !*** ./~/superagent/~/reduce-component/index.js ***!\n  \\**************************************************/\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ },\n\n/***/ 91:\n/*!******************************************!*\\\n  !*** ./src/page/dashboard/Dashboard.jsx ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(/*! ./style.less */ 459);\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(/*! react-dom */ 5);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 9);\n\t\n\tvar _Page = __webpack_require__(/*! ../../framework/page/Page */ 10);\n\t\n\tvar _Page2 = _interopRequireDefault(_Page);\n\t\n\tvar _superagent = __webpack_require__(/*! superagent */ 57);\n\t\n\tvar _superagent2 = _interopRequireDefault(_superagent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * 更新state之后触发的方法:\n\t * shouldComponentUpdate\n\t * componentWillUpdate\n\t * render\n\t * componentDidUpdate\n\t *\n\t * 向DOM中加入组件触发的方法:\n\t * getDefaultProps //在组件类创建的时候调用一次,以后在向DOM中添加组件就不会调用此方法.\n\t * getInitialState\n\t * componentWillMount\n\t * render\n\t * componentDidMount //发送 AJAX 请求，可以在该方法中执行这些操作\n\t *\n\t * 组件从 DOM 中移除的时候立刻被调用\n\t * componentWillUnmount\n\t * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\n\t * componentWillReceiveProps\n\t *\n\t *\n\t * */\n\t\n\t/*\n\t * 组件是 React 里复用代码最佳方式，但是有时一些复杂的组件间也需要共用一些功能。\n\t * 有时会被称为 跨切面关注点。React 使用 mixins 来解决这类问题。\n\t * */\n\tvar SetIntervalMixin = {\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            loading: false\n\t        };\n\t    },\n\t\n\t    componentWillMount: function componentWillMount() {\n\t        this.intervals = [];\n\t    },\n\t    setInterval: function (_setInterval) {\n\t        function setInterval() {\n\t            return _setInterval.apply(this, arguments);\n\t        }\n\t\n\t        setInterval.toString = function () {\n\t            return _setInterval.toString();\n\t        };\n\t\n\t        return setInterval;\n\t    }(function () {\n\t        this.intervals.push(setInterval.apply(null, arguments));\n\t    }),\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        this.intervals.map(clearInterval);\n\t        /*\n\t         * 组件被移除DMO,清除未完成的ajax\n\t         * */\n\t        this.req.abort();\n\t    },\n\t    get: function get(url, _ref) {\n\t        var _ref$data = _ref.data;\n\t        var data = _ref$data === undefined ? {} : _ref$data;\n\t        var _ref$end = _ref.end;\n\t        var end = _ref$end === undefined ? function () {} : _ref$end;\n\t        //带有默认值的函数,写的好难看...\n\t        var that = this;\n\t        that.setState({\n\t            loading: true\n\t        });\n\t        that.req = _superagent2.default.get(url).query(data).end(function (err, res) {\n\t            end(err, res);\n\t            that.setState({\n\t                loading: false\n\t            });\n\t        });\n\t    }\n\t};\n\tvar Dashboard = _react2.default.createClass({\n\t    displayName: 'Dashboard',\n\t\n\t    /*\n\t     * 在组件挂载之前调用一次。返回值将会作为 this.state 的初始值。\n\t     * */\n\t    getInitialState: function getInitialState() {\n\t        //console.log('getInitialState');\n\t        return {\n\t            seconds: 0,\n\t            testAjax: 'testAjax'\n\t        };\n\t    },\n\t\n\t    /*\n\t     * 在组件类创建的时候调用一次，然后返回值被缓存下来。\n\t     * 如果父组件没有指定 props 中的某个键，则此处返回的对象中的相应属性将会合并到 this.props （使用 in 检测属性）。\n\t     * */\n\t    getDefaultProps: function getDefaultProps() {\n\t        //console.log('getDefaultProps');\n\t        return {\n\t            test: 'I\\'m a test'\n\t        };\n\t    },\n\t\n\t    /*\n\t     * 指定props类型,如果类型不对,浏览器控制台会输出警告,但是不会抛错.\n\t     * */\n\t    propTypes: {\n\t        test: _react2.default.PropTypes.string\n\t    },\n\t    /*\n\t     * 引用 mixin\n\t     * */\n\t    mixins: [SetIntervalMixin],\n\t    /*\n\t     * statics 对象允许你定义静态的方法，这些静态的方法可以在组件类上调用。\n\t     * 调用方法:Dashboard.customMethod('bar')\n\t     *\n\t     * 在这个块儿里面定义的方法都是静态的，意味着你可以在任何组件实例创建之前调用它们，这些方法不能获取组件的 props 和 state。\n\t     * 如果你想在静态方法中检查 props 的值，在调用处把 props 作为参数传入到静态方法。\n\t     * */\n\t    statics: {\n\t        customMethod: function customMethod(foo) {\n\t            return foo === 'bar';\n\t        }\n\t    },\n\t    /*\n\t     * 服务器端和客户端都只调用一次，在初始化渲染执行之前立刻调用。\n\t     * 如果在这个方法内调用 setState，render() 将会感知到更新后的 state，将会执行仅一次，尽管 state 改变了。\n\t     * */\n\t    componentWillMount: function componentWillMount() {\n\t        //console.log('componentWillMount');\n\t    },\n\t\n\t    /*\n\t     * 在初始化渲染执行之后立刻调用一次，仅客户端有效（服务器端不会调用）。\n\t     * 在生命周期中的这个时间点，组件拥有一个 DOM 展现，你可以通过 this.getDOMNode()(过时了,新语法使用：ReactDOM.findDOMNode(this) ) 来获取相应 DOM 节点。\n\t     *\n\t     * 如果想和其它 JavaScript 框架集成，使用 setTimeout 或者 setInterval 来设置定时器，或者发送 AJAX 请求，可以在该方法中执行这些操作。\n\t     * */\n\t    componentDidMount: function componentDidMount() {\n\t        //console.log('componentDidMount');\n\t        //console.log(this.getDOMNode());// 过时了\n\t        //console.log(ReactDOM.findDOMNode(this));\n\t        //this.setInterval(this.tick, 1000); // 调用 mixin 的方法\n\t        var that = this;\n\t        that.get('/dashboard.json', {\n\t            data: { query: 'Manny', range: '1..5', order: 'desc' },\n\t            end: function end(err, res) {\n\t                console.log('use superagent', res.body);\n\t                that.setState({\n\t                    testAjax: res.body.name\n\t                });\n\t            }\n\t        });\n\t    },\n\t    /*\n\t     * 在接收到新的 props 或者 state，将要渲染之前调用。该方法在初始化渲染的时候不会调用，在使用 forceUpdate 方法的时候也不会。\n\t     * 如果确定新的 props 和 state 不会导致组件更新，则此处应该 返回 false。\n\t     * */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n\t        //console.log('shouldComponentUpdate');\n\t        return true;\n\t    },\n\t\n\t    /*\n\t     * 在接收到新的 props 或者 state 之前立刻调用。在初始化渲染的时候该方法不会被调用。\n\t     * 使用该方法做一些更新之前的准备工作。\n\t     * */\n\t    componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t        //console.log('componentWillUpdate');\n\t\n\t    },\n\t\n\t    /*\n\t     * 在组件的更新已经同步到 DOM 中之后立刻被调用。该方法不会在初始化渲染的时候调用。\n\t     * 使用该方法可以在组件更新之后操作 DOM 元素。\n\t     * */\n\t    componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t        //console.log('componentDidUpdate');\n\t    },\n\t\n\t    /*\n\t     * 在组件从 DOM 中移除的时候立刻被调用。\n\t     * 在该方法中执行任何必要的清理，比如无效的定时器，或者清除在 componentDidMount 中创建的 DOM 元素。\n\t     * 清理未返回的ajax??\n\t     * */\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        //console.log('componentWillUnmount');\n\t    },\n\t\n\t    /*\n\t     * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\n\t     * 用此函数可以作为 react 在 prop 传入之后， render() 渲染之前更新 state 的机会。老的 props 可以通过 this.props 获取到。\n\t     * 在该函数中调用 this.setState() 将不会引起第二次渲染。\n\t     * */\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        //console.log('componentWillReceiveProps');\n\t    },\n\t\n\t    tick: function tick() {\n\t        this.setState({ seconds: this.state.seconds + 1 });\n\t    },\n\t    handleClick: function handleClick() {\n\t        var that = this;\n\t        that.get('/dashboard.json', {\n\t            end: function end(err, res) {\n\t                console.log(err, res);\n\t                console.log(res.body);\n\t                that.setState({\n\t                    testAjax: res.body.name\n\t                });\n\t            }\n\t        });\n\t    },\n\t\n\t    /*\n\t    * 调用this.setState函数会出发render函数，\n\t    * 不要在render函数内部调用this.setState会导致死循环！！！\n\t    *\n\t    * */\n\t    render: function render() {\n\t        //console.log('render');\n\t        return _react2.default.createElement(\n\t            _Page2.default,\n\t            { header: 'auto', loading: this.state.loading },\n\t            _react2.default.createElement(\n\t                'div',\n\t                { className: 'dashboard' },\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'primary', onClick: this.handleClick },\n\t                    '发起ajax请求'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    null,\n\t                    '次按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'ghost' },\n\t                    '幽灵按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'dashed' },\n\t                    '虚线按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'npm run dev-server 运行一个静态文件服务器 并且打开默认浏览器！'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    '开发过程中，修改文件，浏览器会自动刷新，特别适合双屏/大屏开发！'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    '随着项目复杂度的增加，不知道会不会慢。目前的相应速度还是可以接受的。'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    this.props.test\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'React has been running for ',\n\t                    this.state.seconds,\n\t                    ' seconds.'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'ajax result: ',\n\t                    this.state.testAjax\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\texports.default = Dashboard;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 459:\n/*!***************************************!*\\\n  !*** ./src/page/dashboard/style.less ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 0.js\n **/","import './style.less';\nimport React from 'react';\nimport {message, Breadcrumb,Spin, QueueAnim} from 'antd';\nimport {Link} from 'react-router';\nimport {getCurrentHeaderMenu} from '../HeaderMenu';\nimport {getCurrentSidebarMenu} from '../SidebarMenu'\nimport Settings from '../settings/Settings'\nimport PubSubMsg from '../common/pubsubmsg';\nconst Page = React.createClass({\n    getInitialState(){\n        return {\n            pageHeader: '',\n            showPageAnimate: Settings.pageAnimate()\n        }\n    },\n    getDefaultProps(){\n        return {\n            loading: false,\n            animConfig: [\n                {opacity: [1, 0], translateY: [0, 50]},\n                {opacity: [1, 0], translateY: [0, -50]}\n            ]\n        }\n    },\n    getPageHeaderDateByMenu(){\n        let currentMenu = getCurrentSidebarMenu();\n        let parentText = currentMenu ? currentMenu.parentText : [];\n        let title = currentMenu ? currentMenu.text : '';\n        let breadcrumbItems = [];\n        for (let i = 0; i < parentText.length; i++) {\n            breadcrumbItems.push({text: parentText[i]});\n        }\n        breadcrumbItems.push({text: title});\n        return {\n            title,\n            breadcrumbItems\n        };\n    },\n    setPageHeader(){\n        let pageHeaderJsx = '';\n        let pageHeaderDate = null;\n        if (this.props.header === 'auto') {\n            pageHeaderDate = this.getPageHeaderDateByMenu();\n        } else if (typeof this.props.header == 'object') {\n            if (this.props.header.title || this.props.header.breadcrumbItems) {\n                pageHeaderDate = {};\n                if (this.props.header.title === 'auto') {\n                    pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\n                } else if (this.props.header.title) {\n                    pageHeaderDate.title = this.props.header.title;\n                } else {\n                    pageHeaderDate.title = ' ';\n                }\n                if (this.props.header.breadcrumbItems === 'auto') {\n                    pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems\n                } else if (this.props.header.breadcrumbItems) {\n                    pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\n                } else {\n                    pageHeaderDate.breadcrumbItems = ''\n                }\n            } else {\n                if (this.state.showPageAnimate) {\n                    pageHeaderJsx =\n                        <div className=\"admin-page-header\">\n                            <QueueAnim animConfig={this.props.animConfig}>\n                                <div key='queue-anim-item1'>\n                                    {this.props.header}\n                                </div>\n                            </QueueAnim>\n                        </div>\n                } else {\n                    pageHeaderJsx =\n                        <div className=\"admin-page-header\">\n                            {this.props.header}\n                        </div>\n                }\n\n            }\n\n        }\n        if (pageHeaderDate) {\n            let currentHeaderMenu = getCurrentHeaderMenu();\n            let breadcrumbItems = [];\n            if (currentHeaderMenu) {\n                breadcrumbItems.push(\n                    <Breadcrumb.Item key=\"page-breadcrumb-item-home\"><Link to={currentHeaderMenu.path}>{currentHeaderMenu.text}</Link></Breadcrumb.Item>\n                );\n            }\n            let items = pageHeaderDate.breadcrumbItems;\n            for (let i = 0; i < items.length; i++) {\n                let item = items[i];\n                let key = 'page-breadcrumb-item' + i;\n                breadcrumbItems.push(\n                    item.path ? <Breadcrumb.Item key={key}><Link to={item.path}>{item.text}</Link></Breadcrumb.Item>\n                        : <Breadcrumb.Item key={key}>{item.text}</Breadcrumb.Item>\n                );\n            }\n            let breadcrumb = '';\n            if (pageHeaderDate.breadcrumbItems) {\n                breadcrumb =\n                    <Breadcrumb>\n                        {breadcrumbItems}\n                    </Breadcrumb>;\n            }\n            if (this.state.showPageAnimate) {\n                pageHeaderJsx =\n                    <div className=\"admin-page-header\">\n                        <QueueAnim animConfig={this.props.animConfig}>\n                            <div key='queue-anim-item1'>\n                                <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\n                                {breadcrumb}\n                            </div>\n                        </QueueAnim>\n                    </div>;\n            } else {\n                pageHeaderJsx =\n                    <div className=\"admin-page-header\">\n                        <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\n                        {breadcrumb}\n                    </div>;\n            }\n\n        }\n        this.setState({\n            pageHeader: pageHeaderJsx\n        });\n    },\n    switchLoadingMessage(){\n\n        if (this.props.loading) {\n            if (!this.hideLoading) {\n                //this.hideLoading = message.loading('正在加载...', 0);\n            }\n        } else {\n            if (this.hideLoading) {\n                this.hideLoading();\n            }\n        }\n    },\n    componentWillUpdate(){\n        this.switchLoadingMessage();\n    },\n    componentDidUpdate(){\n        this.switchLoadingMessage();\n    },\n    componentWillMount(){\n\n    },\n    componentDidMount(){\n        let _this = this;\n        PubSubMsg.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\n            _this.setPageHeader();\n        });\n    },\n    componentWillUnmount(){\n        if (this.hideLoading) {\n            this.hideLoading();\n        }\n    },\n    render() {\n        let pageChildren =\n            <Spin spining={this.props.loading}>\n                {this.props.children}\n            </Spin>;\n        if (this.state.showPageAnimate) {\n            pageChildren =\n                <QueueAnim animConfig={this.props.animConfig} delay={100}>\n                    <div key='queue-anim-item1'>\n                        {pageChildren}\n                    </div>\n                </QueueAnim>\n        }\n        return (\n            <div className={\"admin-page \"}>\n                <div className=\"admin-page-content\">\n                    <div className=\"admin-page-content-inner\">\n                        {this.state.pageHeader}\n                        {pageChildren}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nexport default Page;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/framework/page/Page.jsx\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nRequest.prototype.parse = function(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 57\n ** module chunks = 0 4 5\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/~/component-emitter/index.js\n ** module id = 58\n ** module chunks = 0 4 5\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/~/reduce-component/index.js\n ** module id = 59\n ** module chunks = 0 4 5\n **/","import './style.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {message, Breadcrumb, Button } from 'antd'\nimport Page from '../../framework/page/Page';\nimport Request from 'superagent';\n/*\n * 更新state之后触发的方法:\n * shouldComponentUpdate\n * componentWillUpdate\n * render\n * componentDidUpdate\n *\n * 向DOM中加入组件触发的方法:\n * getDefaultProps //在组件类创建的时候调用一次,以后在向DOM中添加组件就不会调用此方法.\n * getInitialState\n * componentWillMount\n * render\n * componentDidMount //发送 AJAX 请求，可以在该方法中执行这些操作\n *\n * 组件从 DOM 中移除的时候立刻被调用\n * componentWillUnmount\n * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\n * componentWillReceiveProps\n *\n *\n * */\n\n/*\n * 组件是 React 里复用代码最佳方式，但是有时一些复杂的组件间也需要共用一些功能。\n * 有时会被称为 跨切面关注点。React 使用 mixins 来解决这类问题。\n * */\nlet SetIntervalMixin = {\n    getInitialState(){\n        return {\n            loading: false\n        }\n    },\n    componentWillMount: function () {\n        this.intervals = [];\n    },\n    setInterval: function () {\n        this.intervals.push(setInterval.apply(null, arguments));\n    },\n    componentWillUnmount: function () {\n        this.intervals.map(clearInterval);\n        /*\n         * 组件被移除DMO,清除未完成的ajax\n         * */\n        this.req.abort();\n    },\n    get(url, {data={},end=function () {\n    }}){//带有默认值的函数,写的好难看...\n        let that = this;\n        that.setState({\n            loading: true\n        });\n        that.req = Request\n            .get(url)\n            .query(data)\n            .end(function (err, res) {\n                end(err, res);\n                that.setState({\n                    loading: false\n                });\n            });\n    }\n\n};\nconst Dashboard = React.createClass({\n    /*\n     * 在组件挂载之前调用一次。返回值将会作为 this.state 的初始值。\n     * */\n    getInitialState(){\n        //console.log('getInitialState');\n        return {\n            seconds: 0,\n            testAjax: 'testAjax'\n        }\n    },\n    /*\n     * 在组件类创建的时候调用一次，然后返回值被缓存下来。\n     * 如果父组件没有指定 props 中的某个键，则此处返回的对象中的相应属性将会合并到 this.props （使用 in 检测属性）。\n     * */\n    getDefaultProps(){\n        //console.log('getDefaultProps');\n        return {\n            test: 'I\\'m a test'\n        }\n    },\n    /*\n     * 指定props类型,如果类型不对,浏览器控制台会输出警告,但是不会抛错.\n     * */\n    propTypes: {\n        test: React.PropTypes.string\n    },\n    /*\n     * 引用 mixin\n     * */\n    mixins: [SetIntervalMixin],\n    /*\n     * statics 对象允许你定义静态的方法，这些静态的方法可以在组件类上调用。\n     * 调用方法:Dashboard.customMethod('bar')\n     *\n     * 在这个块儿里面定义的方法都是静态的，意味着你可以在任何组件实例创建之前调用它们，这些方法不能获取组件的 props 和 state。\n     * 如果你想在静态方法中检查 props 的值，在调用处把 props 作为参数传入到静态方法。\n     * */\n    statics: {\n        customMethod: function (foo) {\n            return foo === 'bar';\n        }\n    },\n    /*\n     * 服务器端和客户端都只调用一次，在初始化渲染执行之前立刻调用。\n     * 如果在这个方法内调用 setState，render() 将会感知到更新后的 state，将会执行仅一次，尽管 state 改变了。\n     * */\n    componentWillMount(){\n        //console.log('componentWillMount');\n    },\n    /*\n     * 在初始化渲染执行之后立刻调用一次，仅客户端有效（服务器端不会调用）。\n     * 在生命周期中的这个时间点，组件拥有一个 DOM 展现，你可以通过 this.getDOMNode()(过时了,新语法使用：ReactDOM.findDOMNode(this) ) 来获取相应 DOM 节点。\n     *\n     * 如果想和其它 JavaScript 框架集成，使用 setTimeout 或者 setInterval 来设置定时器，或者发送 AJAX 请求，可以在该方法中执行这些操作。\n     * */\n    componentDidMount: function () {\n        //console.log('componentDidMount');\n        //console.log(this.getDOMNode());// 过时了\n        //console.log(ReactDOM.findDOMNode(this));\n        //this.setInterval(this.tick, 1000); // 调用 mixin 的方法\n        let that = this;\n        that.get('/dashboard.json', {\n            data: {query: 'Manny', range: '1..5', order: 'desc'},\n            end(err, res) {\n                console.log('use superagent', res.body);\n                that.setState({\n                    testAjax: res.body.name\n                });\n            }\n        });\n    },\n    /*\n     * 在接收到新的 props 或者 state，将要渲染之前调用。该方法在初始化渲染的时候不会调用，在使用 forceUpdate 方法的时候也不会。\n     * 如果确定新的 props 和 state 不会导致组件更新，则此处应该 返回 false。\n     * */\n    shouldComponentUpdate(nextProps, nextState){\n        //console.log('shouldComponentUpdate');\n        return true;\n    },\n    /*\n     * 在接收到新的 props 或者 state 之前立刻调用。在初始化渲染的时候该方法不会被调用。\n     * 使用该方法做一些更新之前的准备工作。\n     * */\n    componentWillUpdate(nextProps, nextState){\n        //console.log('componentWillUpdate');\n\n    },\n    /*\n     * 在组件的更新已经同步到 DOM 中之后立刻被调用。该方法不会在初始化渲染的时候调用。\n     * 使用该方法可以在组件更新之后操作 DOM 元素。\n     * */\n    componentDidUpdate(prevProps, prevState){\n        //console.log('componentDidUpdate');\n    },\n    /*\n     * 在组件从 DOM 中移除的时候立刻被调用。\n     * 在该方法中执行任何必要的清理，比如无效的定时器，或者清除在 componentDidMount 中创建的 DOM 元素。\n     * 清理未返回的ajax??\n     * */\n    componentWillUnmount(){\n        //console.log('componentWillUnmount');\n    },\n    /*\n     * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\n     * 用此函数可以作为 react 在 prop 传入之后， render() 渲染之前更新 state 的机会。老的 props 可以通过 this.props 获取到。\n     * 在该函数中调用 this.setState() 将不会引起第二次渲染。\n     * */\n    componentWillReceiveProps(nextProps){\n        //console.log('componentWillReceiveProps');\n    },\n    tick: function () {\n        this.setState({seconds: this.state.seconds + 1});\n    },\n    handleClick(){\n        let that = this;\n        that.get('/dashboard.json', {\n            end(err, res) {\n                console.log(err, res);\n                console.log(res.body);\n                that.setState({\n                    testAjax: res.body.name\n                });\n            }\n        });\n    },\n    /*\n    * 调用this.setState函数会出发render函数，\n    * 不要在render函数内部调用this.setState会导致死循环！！！\n    *\n    * */\n    render() {\n        //console.log('render');\n        return (\n            <Page header=\"auto\" loading={this.state.loading}>\n                <div className=\"dashboard\">\n                    <Button type=\"primary\" onClick={this.handleClick}>发起ajax请求</Button>\n                    <Button>次按钮</Button>\n                    <Button type=\"ghost\">幽灵按钮</Button>\n                    <Button type=\"dashed\">虚线按钮</Button>\n                    <p>npm run dev-server 运行一个静态文件服务器 并且打开默认浏览器！</p>\n                    <p>开发过程中，修改文件，浏览器会自动刷新，特别适合双屏/大屏开发！</p>\n                    <p>随着项目复杂度的增加，不知道会不会慢。目前的相应速度还是可以接受的。</p>\n                    <p>{this.props.test}</p>\n                    <p>\n                        React has been running for {this.state.seconds} seconds.\n                    </p>\n                    <p>ajax result: {this.state.testAjax}</p>\n                </div>\n            </Page>\n        );\n    }\n});\nexport default Dashboard;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/dashboard/Dashboard.jsx\n **/"],"sourceRoot":""}