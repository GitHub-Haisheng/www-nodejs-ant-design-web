{"version":3,"sources":["webpack:///0.242cd9ff.min.js","webpack:///./src/framework/header/HeaderMenuUtil.jsx?51a7","webpack:///./src/framework/page/Page.jsx?1ba2","webpack:///./~/superagent/lib/is-object.js","webpack:///./~/component-emitter/index.js","webpack:///./~/form-data/lib/browser.js","webpack:///./~/reduce-component/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/request.js","webpack:///./src/page/dashboard/Dashboard.jsx"],"names":["webpackJsonp",13,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","getCurrentKey","pathNames","location","pathname","split","headerMenuCurrent","length","buildHeaderMenu","menuData","menuItems","i","md","push","_react2","createElement","_antd","Menu","Item","key","_reactRouter","Link","to","path","_FAIcon2","type","icon","className","text","Object","defineProperty","value","getCurrentHeaderMenu","getHeaderMenus","undefined","_react","_FAIcon","_HeaderMenus","_HeaderMenus2","headerMenu",14,"_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_HeaderMenuUtil","_SidebarMenuUtil","_Settings","_Settings2","_pubsubmsg","_pubsubmsg2","Page","_React$Component","this","_this2","state","pageHeader","showPageAnimate","pageAnimate","currentMenu","getCurrentSidebarMenu","parentText","title","breadcrumbItems","pageHeaderJsx","pageHeaderDate","header","getPageHeaderDateByMenu","QueueAnim","animConfig","currentHeaderMenu","Breadcrumb","items","item","breadcrumb","setState","loading","hideLoading","switchLoadingMessage","_this","subscribeOnceAcceptOldMsg","setPageHeader","pageChildren","Spin","spining","children","delay","Component","defaultProps","opacity","translateY",41,"isObject",54,"Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","len","listeners","hasListeners",57,"FormData",65,"arr","initial","idx","curr",66,"noop","isHost","str","toString","serialize","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","encodeURIComponent","parseString","parts","pair","decodeURIComponent","parseHeader","index","line","field","lines","fields","pop","indexOf","toLowerCase","trim","isJSON","mime","test","shift","params","reduce","Response","req","options","xhr","method","responseType","responseText","statusText","setStatusProperties","status","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","body","parseBody","response","Request","url","_query","_header","err","res","e","Error","parse","original","rawResponse","statusCode","callback","new_err","del","request","end","root","requestBase","window","bind","getXHR","XMLHttpRequest","protocol","ActiveXObject","s","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","ct","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","abort","aborted","clearTimeout","set","_responseType","accept","auth","user","pass","btoa","username","password","query","attach","file","filename","_formData","append","name","send","data","_data","_callback","crossDomainError","crossDomain","timeoutError","timeout","_timeout","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","loaded","direction","onprogress","upload","_timer","setTimeout","open","contentType","_parser","setRequestHeader","head","patch","post","put",67,"ms","then","fulfill","reject","use","getHeader","unset",68,"RequestConstructor",89,"_reactDom","_Page","_Page2","_superagent","_superagent2","RequestMixin","getInitialState","componentDidMount","requests","fetch","defaultOptions","assign","that","re","componentWillUnmount","console","log","r","Dashboard","createClass","displayName","seconds","testAjax","getDefaultProps","propTypes","PropTypes","string","mixins","statics","customMethod","foo","componentWillMount","range","order","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","prevProps","prevState","componentWillReceiveProps","tick","handleClick","render","Button","onClick",364],"mappings":"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","file":"0.242cd9ff.min.js","sourcesContent":["webpackJsonp([0,15],{\n\n/***/ 13:\n/*!*************************************************!*\\\n  !*** ./src/framework/header/HeaderMenuUtil.jsx ***!\n  \\*************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getCurrentHeaderMenu = exports.getHeaderMenus = undefined;\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _FAIcon = __webpack_require__(/*! ../../common/faicon/FAIcon */ 17);\n\t\n\tvar _FAIcon2 = _interopRequireDefault(_FAIcon);\n\t\n\tvar _reactRouter = __webpack_require__(/*! react-router */ 6);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 4);\n\t\n\tvar _HeaderMenus = __webpack_require__(/*! ./HeaderMenus */ 25);\n\t\n\tvar _HeaderMenus2 = _interopRequireDefault(_HeaderMenus);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\r\n\t * 获取头部菜单构建完成的jsx数据,直接可以用于显示\r\n\t * */\n\tvar getHeaderMenus = exports.getHeaderMenus = function getHeaderMenus() {\n\t    var headerMenuCurrent = getCurrentKey();\n\t    var headerMenu = buildHeaderMenu(_HeaderMenus2.default);\n\t    return [headerMenu, headerMenuCurrent];\n\t};\n\t/*\r\n\t * 获取头部需要设为当前状态的菜单数据.\r\n\t * */\n\tvar getCurrentHeaderMenu = exports.getCurrentHeaderMenu = function getCurrentHeaderMenu() {\n\t    var headerMenuCurrent = getCurrentKey();\n\t    for (var i = 0; i < _HeaderMenus2.default.length; i++) {\n\t        if (headerMenuCurrent == _HeaderMenus2.default[i].key) {\n\t            return _HeaderMenus2.default[i];\n\t        }\n\t    }\n\t    return null;\n\t};\n\t/*\r\n\t * 根据地址栏url 获取 头部菜单对应的key\r\n\t * */\n\tfunction getCurrentKey() {\n\t    var pathNames = location.pathname.split('/');\n\t    var headerMenuCurrent = null;\n\t    if (pathNames && pathNames.length > 0) {\n\t        headerMenuCurrent = pathNames[1];\n\t    }\n\t    return headerMenuCurrent;\n\t}\n\t\n\t/*\r\n\t * 创建头部菜单jsx形式数据。\r\n\t * */\n\tfunction buildHeaderMenu(menuData) {\n\t    var menuItems = [];\n\t    for (var i = 0; i < menuData.length; i++) {\n\t        var md = menuData[i];\n\t        menuItems.push(_react2.default.createElement(\n\t            _antd.Menu.Item,\n\t            { key: md.key },\n\t            _react2.default.createElement(\n\t                _reactRouter.Link,\n\t                { to: md.path },\n\t                _react2.default.createElement(_FAIcon2.default, { type: md.icon }),\n\t                _react2.default.createElement(\n\t                    'span',\n\t                    { className: 'admin-header-sys-menu-text' },\n\t                    md.text\n\t                )\n\t            )\n\t        ));\n\t    }\n\t    return menuItems;\n\t}\n\n/***/ },\n\n/***/ 14:\n/*!*************************************!*\\\n  !*** ./src/framework/page/Page.jsx ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 4);\n\t\n\tvar _reactRouter = __webpack_require__(/*! react-router */ 6);\n\t\n\tvar _HeaderMenuUtil = __webpack_require__(/*! ../header/HeaderMenuUtil */ 13);\n\t\n\tvar _SidebarMenuUtil = __webpack_require__(/*! ../sidebar/SidebarMenuUtil */ 21);\n\t\n\tvar _Settings = __webpack_require__(/*! ../settings/Settings */ 19);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _pubsubmsg = __webpack_require__(/*! ../../common/pubsubmsg */ 18);\n\t\n\tvar _pubsubmsg2 = _interopRequireDefault(_pubsubmsg);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Page = function (_React$Component) {\n\t    _inherits(Page, _React$Component);\n\t\n\t    function Page(props) {\n\t        _classCallCheck(this, Page);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Page).call(this, props));\n\t\n\t        _this2.state = {\n\t            pageHeader: '',\n\t            showPageAnimate: _Settings2.default.pageAnimate()\n\t        };\n\t        return _this2;\n\t    }\n\t\n\t    _createClass(Page, [{\n\t        key: 'getPageHeaderDateByMenu',\n\t        value: function getPageHeaderDateByMenu() {\n\t            var currentMenu = (0, _SidebarMenuUtil.getCurrentSidebarMenu)();\n\t            var parentText = currentMenu ? currentMenu.parentText : [];\n\t            var title = currentMenu ? currentMenu.text : '';\n\t            var breadcrumbItems = [];\n\t            for (var i = 0; i < parentText.length; i++) {\n\t                breadcrumbItems.push({ text: parentText[i] });\n\t            }\n\t            breadcrumbItems.push({ text: title });\n\t            return {\n\t                title: title,\n\t                breadcrumbItems: breadcrumbItems\n\t            };\n\t        }\n\t    }, {\n\t        key: 'setPageHeader',\n\t        value: function setPageHeader() {\n\t            var pageHeaderJsx = '';\n\t            var pageHeaderDate = null;\n\t            if (this.props.header === 'auto') {\n\t                pageHeaderDate = this.getPageHeaderDateByMenu();\n\t            } else if (_typeof(this.props.header) == 'object') {\n\t                if (this.props.header.title || this.props.header.breadcrumbItems) {\n\t                    pageHeaderDate = {};\n\t                    if (this.props.header.title === 'auto') {\n\t                        pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\n\t                    } else if (this.props.header.title) {\n\t                        pageHeaderDate.title = this.props.header.title;\n\t                    } else {\n\t                        pageHeaderDate.title = ' ';\n\t                    }\n\t                    if (this.props.header.breadcrumbItems === 'auto') {\n\t                        pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems;\n\t                    } else if (this.props.header.breadcrumbItems) {\n\t                        pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\n\t                    } else {\n\t                        pageHeaderDate.breadcrumbItems = '';\n\t                    }\n\t                } else {\n\t                    if (this.state.showPageAnimate) {\n\t                        pageHeaderJsx = _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'admin-page-header' },\n\t                            _react2.default.createElement(\n\t                                _antd.QueueAnim,\n\t                                { animConfig: this.props.animConfig },\n\t                                _react2.default.createElement(\n\t                                    'div',\n\t                                    { key: 'queue-anim-item1' },\n\t                                    this.props.header\n\t                                )\n\t                            )\n\t                        );\n\t                    } else {\n\t                        pageHeaderJsx = _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'admin-page-header' },\n\t                            this.props.header\n\t                        );\n\t                    }\n\t                }\n\t            }\n\t            if (pageHeaderDate) {\n\t                var currentHeaderMenu = (0, _HeaderMenuUtil.getCurrentHeaderMenu)();\n\t                var breadcrumbItems = [];\n\t                if (currentHeaderMenu) {\n\t                    breadcrumbItems.push(_react2.default.createElement(\n\t                        _antd.Breadcrumb.Item,\n\t                        { key: 'page-breadcrumb-item-home' },\n\t                        _react2.default.createElement(\n\t                            _reactRouter.Link,\n\t                            { to: currentHeaderMenu.path },\n\t                            currentHeaderMenu.text\n\t                        )\n\t                    ));\n\t                }\n\t                var items = pageHeaderDate.breadcrumbItems;\n\t                for (var i = 0; i < items.length; i++) {\n\t                    var item = items[i];\n\t                    var key = 'page-breadcrumb-item' + i;\n\t                    breadcrumbItems.push(item.path ? _react2.default.createElement(\n\t                        _antd.Breadcrumb.Item,\n\t                        { key: key },\n\t                        _react2.default.createElement(\n\t                            _reactRouter.Link,\n\t                            { to: item.path },\n\t                            item.text\n\t                        )\n\t                    ) : _react2.default.createElement(\n\t                        _antd.Breadcrumb.Item,\n\t                        { key: key },\n\t                        item.text\n\t                    ));\n\t                }\n\t                var breadcrumb = '';\n\t                if (pageHeaderDate.breadcrumbItems) {\n\t                    breadcrumb = _react2.default.createElement(\n\t                        _antd.Breadcrumb,\n\t                        null,\n\t                        breadcrumbItems\n\t                    );\n\t                }\n\t                if (this.state.showPageAnimate) {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        _react2.default.createElement(\n\t                            _antd.QueueAnim,\n\t                            { animConfig: this.props.animConfig },\n\t                            _react2.default.createElement(\n\t                                'div',\n\t                                { key: 'queue-anim-item1' },\n\t                                _react2.default.createElement(\n\t                                    'h1',\n\t                                    { className: 'admin-page-header-title' },\n\t                                    pageHeaderDate.title\n\t                                ),\n\t                                breadcrumb\n\t                            )\n\t                        )\n\t                    );\n\t                } else {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        _react2.default.createElement(\n\t                            'h1',\n\t                            { className: 'admin-page-header-title' },\n\t                            pageHeaderDate.title\n\t                        ),\n\t                        breadcrumb\n\t                    );\n\t                }\n\t            }\n\t            this.setState({\n\t                pageHeader: pageHeaderJsx\n\t            });\n\t        }\n\t    }, {\n\t        key: 'switchLoadingMessage',\n\t        value: function switchLoadingMessage() {\n\t\n\t            if (this.props.loading) {\n\t                if (!this.hideLoading) {\n\t                    //this.hideLoading = message.loading('正在加载...', 0);\n\t                }\n\t            } else {\n\t                    if (this.hideLoading) {\n\t                        this.hideLoading();\n\t                    }\n\t                }\n\t        }\n\t    }, {\n\t        key: 'componentWillUpdate',\n\t        value: function componentWillUpdate() {\n\t            this.switchLoadingMessage();\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.switchLoadingMessage();\n\t        }\n\t    }, {\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {}\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            if (_get(Object.getPrototypeOf(Page.prototype), 'componentDidMount', this)) {\n\t                _get(Object.getPrototypeOf(Page.prototype), 'componentDidMount', this).call(this);\n\t            }\n\t            var _this = this;\n\t            _pubsubmsg2.default.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\n\t                _this.setPageHeader();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'componentWillUnmount',\n\t        value: function componentWillUnmount() {\n\t            if (this.hideLoading) {\n\t                this.hideLoading();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var pageChildren = _react2.default.createElement(\n\t                _antd.Spin,\n\t                { spining: this.props.loading },\n\t                this.props.children\n\t            );\n\t            if (this.state.showPageAnimate) {\n\t                pageChildren = _react2.default.createElement(\n\t                    _antd.QueueAnim,\n\t                    { animConfig: this.props.animConfig, delay: 100 },\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { key: 'queue-anim-item1' },\n\t                        pageChildren\n\t                    )\n\t                );\n\t            }\n\t            return _react2.default.createElement(\n\t                'div',\n\t                { className: \"admin-page \" },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-content' },\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-content-inner' },\n\t                        this.state.pageHeader,\n\t                        pageChildren\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Page;\n\t}(_react2.default.Component);\n\t\n\tPage.defaultProps = {\n\t    loading: false,\n\t    animConfig: [{ opacity: [1, 0], translateY: [0, 50] }, { opacity: [1, 0], translateY: [0, -50] }]\n\t};\n\texports.default = Page;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 41:\n/*!***************************************!*\\\n  !*** ./~/superagent/lib/is-object.js ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null != obj && 'object' == typeof obj;\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n\n/***/ 54:\n/*!**************************************!*\\\n  !*** ./~/component-emitter/index.js ***!\n  \\**************************************/\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n\n/***/ 57:\n/*!************************************!*\\\n  !*** ./~/form-data/lib/browser.js ***!\n  \\************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = FormData;\n\n/***/ },\n\n/***/ 65:\n/*!*************************************!*\\\n  !*** ./~/reduce-component/index.js ***!\n  \\*************************************/\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ },\n\n/***/ 66:\n/*!************************************!*\\\n  !*** ./~/superagent/lib/client.js ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(/*! emitter */ 54);\n\tvar reduce = __webpack_require__(/*! reduce */ 65);\n\tvar requestBase = __webpack_require__(/*! ./request-base */ 67);\n\tvar isObject = __webpack_require__(/*! ./is-object */ 41);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  root = this;\n\t}\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = module.exports = __webpack_require__(/*! ./request */ 68).bind(null, Request);\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t        }\n\t      }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (Array.isArray(val)) {\n\t    return val.forEach(function(v) {\n\t      pushEncodedKeyValuePair(pairs, key, v);\n\t    });\n\t  }\n\t  pairs.push(encodeURIComponent(key)\n\t    + '=' + encodeURIComponent(val));\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var parts;\n\t  var pair;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    parts = pair.split('=');\n\t    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this.setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this.setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this.parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype.parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      // issue #876: return the http status code if the response parsing fails\n\t      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    if (res.status >= 200 && res.status < 300) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t    new_err.original = err;\n\t    new_err.response = res;\n\t    new_err.status = res.status;\n\t\n\t    self.callback(new_err, res);\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `requestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tfor (var key in requestBase) {\n\t  Request.prototype[key] = requestBase[key];\n\t}\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  if (this.aborted) return;\n\t  this.aborted = true;\n\t  this.xhr.abort();\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set responseType to `val`. Presently valid responseTypes are 'blob' and \n\t * 'arraybuffer'.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.responseType = function(val){\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass, options){\n\t  if (!options) {\n\t    options = {\n\t      type: 'basic'\n\t    }\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      var str = btoa(user + ':' + pass);\n\t      this.set('Authorization', 'Basic ' + str);\n\t    break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t    break;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t  *      request.post('/user')\n\t  *        .send('name=tobi')\n\t  *        .send('species=ferret')\n\t  *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || isHost(data)) return this;\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.withCredentials = function(){\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var query = this._query.join('&');\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self.timeoutError();\n\t      if (self.aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = 'download';\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  if (query) {\n\t    query = request.serializeObject(query);\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t\n\t  // initiate request\n\t  if (this.username && this.password) {\n\t    xhr.open(this.method, this.url, true, this.username, this.password);\n\t  } else {\n\t    xhr.open(this.method, this.url, true);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n\n/***/ },\n\n/***/ 67:\n/*!******************************************!*\\\n  !*** ./~/superagent/lib/request-base.js ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(/*! ./is-object */ 41);\n\t\n\tvar FormData = __webpack_require__(/*! form-data */ 57); // browserify compatible\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.clearTimeout = function _clearTimeout(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Force given parser\n\t *\n\t * Sets the body parser no matter type.\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.parse = function parse(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.timeout = function timeout(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Faux promise support\n\t *\n\t * @param {Function} fulfill\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\texports.then = function then(fulfill, reject) {\n\t  return this.end(function(err, res) {\n\t    err ? reject(err) : fulfill(res);\n\t  });\n\t}\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\texports.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\texports.get = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\texports.getHeader = exports.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\texports.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\texports.field = function(name, val) {\n\t  if (!this._formData) this._formData = new FormData();\n\t  this._formData.append(name, val);\n\t  return this;\n\t};\n\n\n/***/ },\n\n/***/ 68:\n/*!*************************************!*\\\n  !*** ./~/superagent/lib/request.js ***!\n  \\*************************************/\n/***/ function(module, exports) {\n\n\t// The node and browser modules expose versions of this with the\n\t// appropriate constructor function bound as first argument\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(RequestConstructor, method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new RequestConstructor('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (2 == arguments.length) {\n\t    return new RequestConstructor('GET', method);\n\t  }\n\t\n\t  return new RequestConstructor(method, url);\n\t}\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n\n/***/ 89:\n/*!******************************************!*\\\n  !*** ./src/page/dashboard/Dashboard.jsx ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(/*! ./style.less */ 364);\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(/*! react-dom */ 9);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 4);\n\t\n\tvar _Page = __webpack_require__(/*! ../../framework/page/Page */ 14);\n\t\n\tvar _Page2 = _interopRequireDefault(_Page);\n\t\n\tvar _superagent = __webpack_require__(/*! superagent */ 66);\n\t\n\tvar _superagent2 = _interopRequireDefault(_superagent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\r\n\t * 更新state之后触发的方法:\r\n\t * shouldComponentUpdate\r\n\t * componentWillUpdate\r\n\t * render\r\n\t * componentDidUpdate\r\n\t *\r\n\t * 向DOM中加入组件触发的方法:\r\n\t * getDefaultProps //在组件类创建的时候调用一次,以后在向DOM中添加组件就不会调用此方法.\r\n\t * getInitialState\r\n\t * componentWillMount\r\n\t * render\r\n\t * componentDidMount //发送 AJAX 请求，可以在该方法中执行这些操作\r\n\t *\r\n\t * 组件从 DOM 中移除的时候立刻被调用\r\n\t * componentWillUnmount\r\n\t * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\r\n\t * componentWillReceiveProps\r\n\t *\r\n\t *\r\n\t * */\n\t\n\t/*\r\n\t * 组件是 React 里复用代码最佳方式，但是有时一些复杂的组件间也需要共用一些功能。\r\n\t * 有时会被称为 跨切面关注点。React 使用 mixins 来解决这类问题。\r\n\t * */\n\tvar RequestMixin = {\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            loading: false\n\t        };\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        this.requests = [];\n\t    },\n\t\n\t    requests: [],\n\t    fetch: function fetch(options) {\n\t        var defaultOptions = {\n\t            url: '',\n\t            data: {},\n\t            end: function end() {}\n\t        };\n\t        options = Object.assign(defaultOptions, options);\n\t        var that = this;\n\t        that.setState({\n\t            loading: true\n\t        });\n\t        var re = _superagent2.default.get(options.url).query(options.data).end(function (err, res) {\n\t            options.end(err, res);\n\t            that.setState({\n\t                loading: false\n\t            });\n\t        });\n\t        this.requests.push(re);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        console.log(this.requests.length);\n\t        for (var i = 0; i < this.requests.length; i++) {\n\t            var r = this.requests[i];\n\t            r.abort();\n\t        }\n\t    }\n\t};\n\t\n\tvar Dashboard = _react2.default.createClass({\n\t    displayName: 'Dashboard',\n\t\n\t    /*\r\n\t     * 在组件挂载之前调用一次。返回值将会作为 this.state 的初始值。\r\n\t     * */\n\t    getInitialState: function getInitialState() {\n\t        //console.log('getInitialState');\n\t        return {\n\t            seconds: 0,\n\t            testAjax: 'testAjax'\n\t        };\n\t    },\n\t\n\t    /*\r\n\t     * 在组件类创建的时候调用一次，然后返回值被缓存下来。\r\n\t     * 如果父组件没有指定 props 中的某个键，则此处返回的对象中的相应属性将会合并到 this.props （使用 in 检测属性）。\r\n\t     * */\n\t    getDefaultProps: function getDefaultProps() {\n\t        //console.log('getDefaultProps');\n\t        return {\n\t            test: 'I\\'m a test'\n\t        };\n\t    },\n\t\n\t    /*\r\n\t     * 指定props类型,如果类型不对,浏览器控制台会输出警告,但是不会抛错.\r\n\t     * */\n\t    propTypes: {\n\t        test: _react2.default.PropTypes.string\n\t    },\n\t    /*\r\n\t     * 引用 mixin\r\n\t     * */\n\t    mixins: [RequestMixin],\n\t    /*\r\n\t     * statics 对象允许你定义静态的方法，这些静态的方法可以在组件类上调用。\r\n\t     * 调用方法:Dashboard.customMethod('bar')\r\n\t     *\r\n\t     * 在这个块儿里面定义的方法都是静态的，意味着你可以在任何组件实例创建之前调用它们，这些方法不能获取组件的 props 和 state。\r\n\t     * 如果你想在静态方法中检查 props 的值，在调用处把 props 作为参数传入到静态方法。\r\n\t     * */\n\t    statics: {\n\t        customMethod: function customMethod(foo) {\n\t            return foo === 'bar';\n\t        }\n\t    },\n\t    /*\r\n\t     * 服务器端和客户端都只调用一次，在初始化渲染执行之前立刻调用。\r\n\t     * 如果在这个方法内调用 setState，render() 将会感知到更新后的 state，将会执行仅一次，尽管 state 改变了。\r\n\t     * */\n\t    componentWillMount: function componentWillMount() {\n\t        //console.log('componentWillMount');\n\t    },\n\t\n\t    /*\r\n\t     * 在初始化渲染执行之后立刻调用一次，仅客户端有效（服务器端不会调用）。\r\n\t     * 在生命周期中的这个时间点，组件拥有一个 DOM 展现，你可以通过 this.getDOMNode()(过时了,新语法使用：ReactDOM.findDOMNode(this) ) 来获取相应 DOM 节点。\r\n\t     *\r\n\t     * 如果想和其它 JavaScript 框架集成，使用 setTimeout 或者 setInterval 来设置定时器，或者发送 AJAX 请求，可以在该方法中执行这些操作。\r\n\t     * */\n\t    componentDidMount: function componentDidMount() {\n\t        var _this = this;\n\t        _this.fetch({\n\t            url: '/dashboard.json',\n\t            data: { query: 'Manny', range: '1..5', order: 'desc', delay: 1000 },\n\t            end: function end(err, res) {\n\t                console.log('use superagent', res.body);\n\t                _this.setState({\n\t                    testAjax: res.body.name\n\t                });\n\t            }\n\t        });\n\t        _this.fetch({\n\t            url: '/dashboard.json',\n\t            data: { query: 'Manny', range: '1..5', order: 'desc', delay: 3000 },\n\t            end: function end(err, res) {\n\t                console.log('use superagent', res.body);\n\t                _this.setState({\n\t                    testAjax: '3000延迟的Ajax'\n\t                });\n\t            }\n\t        });\n\t    },\n\t    /*\r\n\t     * 在接收到新的 props 或者 state，将要渲染之前调用。该方法在初始化渲染的时候不会调用，在使用 forceUpdate 方法的时候也不会。\r\n\t     * 如果确定新的 props 和 state 不会导致组件更新，则此处应该 返回 false。\r\n\t     * */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n\t        //console.log('shouldComponentUpdate');\n\t        return true;\n\t    },\n\t\n\t    /*\r\n\t     * 在接收到新的 props 或者 state 之前立刻调用。在初始化渲染的时候该方法不会被调用。\r\n\t     * 使用该方法做一些更新之前的准备工作。\r\n\t     * */\n\t    componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t        //console.log('componentWillUpdate');\n\t\n\t    },\n\t\n\t    /*\r\n\t     * 在组件的更新已经同步到 DOM 中之后立刻被调用。该方法不会在初始化渲染的时候调用。\r\n\t     * 使用该方法可以在组件更新之后操作 DOM 元素。\r\n\t     * */\n\t    componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t        //console.log('componentDidUpdate');\n\t    },\n\t\n\t    /*\r\n\t     * 在组件从 DOM 中移除的时候立刻被调用。\r\n\t     * 在该方法中执行任何必要的清理，比如无效的定时器，或者清除在 componentDidMount 中创建的 DOM 元素。\r\n\t     * 清理未返回的ajax??\r\n\t     * */\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        //console.log('componentWillUnmount');\n\t    },\n\t\n\t    /*\r\n\t     * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\r\n\t     * 用此函数可以作为 react 在 prop 传入之后， render() 渲染之前更新 state 的机会。老的 props 可以通过 this.props 获取到。\r\n\t     * 在该函数中调用 this.setState() 将不会引起第二次渲染。\r\n\t     * */\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        //console.log('componentWillReceiveProps');\n\t    },\n\t\n\t    tick: function tick() {\n\t        this.setState({ seconds: this.state.seconds + 1 });\n\t    },\n\t    handleClick: function handleClick() {\n\t        var that = this;\n\t        that.get('/dashboard.json', {\n\t            end: function end(err, res) {\n\t                console.log(err, res);\n\t                console.log(res.body);\n\t                that.setState({\n\t                    testAjax: res.body.name\n\t                });\n\t            }\n\t        });\n\t    },\n\t\n\t    /*\r\n\t     * 调用this.setState函数会出发render函数，\r\n\t     * 不要在render函数内部调用this.setState会导致死循环！！！\r\n\t     *\r\n\t     * */\n\t    render: function render() {\n\t        //console.log('render');\n\t        return _react2.default.createElement(\n\t            _Page2.default,\n\t            { header: 'auto', loading: this.state.loading },\n\t            _react2.default.createElement(\n\t                'div',\n\t                { className: 'dashboard' },\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'primary', onClick: this.handleClick },\n\t                    '发起ajax请求'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    null,\n\t                    '次按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'ghost' },\n\t                    '幽灵按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _antd.Button,\n\t                    { type: 'dashed' },\n\t                    '虚线按钮'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'npm run dev-server 运行一个静态文件服务器 并且打开默认浏览器！'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    '开发过程中，修改文件，浏览器会自动刷新，特别适合双屏/大屏开发！'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    '随着项目复杂度的增加，不知道会不会慢。目前的相应速度还是可以接受的。'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    this.props.test\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'React has been running for ',\n\t                    this.state.seconds,\n\t                    ' seconds.'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'ajax result: ',\n\t                    this.state.testAjax\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\texports.default = Dashboard;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 364:\n/*!***************************************!*\\\n  !*** ./src/page/dashboard/style.less ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 0.242cd9ff.min.js\n **/","import React from 'react';\r\nimport FAIcon from '../../common/faicon/FAIcon';\r\nimport {Link} from 'react-router'\r\nimport {Menu, Tooltip} from 'antd';\r\nimport headerMenuData from './HeaderMenus'\r\n\r\n/*\r\n * 获取头部菜单构建完成的jsx数据,直接可以用于显示\r\n * */\r\nexport let getHeaderMenus = function () {\r\n    let headerMenuCurrent = getCurrentKey();\r\n    let headerMenu = buildHeaderMenu(headerMenuData);\r\n    return [headerMenu, headerMenuCurrent];\r\n};\r\n/*\r\n * 获取头部需要设为当前状态的菜单数据.\r\n * */\r\nexport let getCurrentHeaderMenu = function () {\r\n    let headerMenuCurrent = getCurrentKey();\r\n    for (let i = 0; i < headerMenuData.length; i++) {\r\n        if (headerMenuCurrent == headerMenuData[i].key) {\r\n            return headerMenuData[i]\r\n        }\r\n    }\r\n    return null\r\n};\r\n/*\r\n * 根据地址栏url 获取 头部菜单对应的key\r\n * */\r\nfunction getCurrentKey() {\r\n    let pathNames = location.pathname.split('/');\r\n    let headerMenuCurrent = null;\r\n    if (pathNames && pathNames.length > 0) {\r\n        headerMenuCurrent = pathNames[1];\r\n    }\r\n    return headerMenuCurrent\r\n}\r\n\r\n/*\r\n * 创建头部菜单jsx形式数据。\r\n * */\r\nfunction buildHeaderMenu(menuData) {\r\n    let menuItems = [];\r\n    for (let i = 0; i < menuData.length; i++) {\r\n        let md = menuData[i];\r\n        menuItems.push(\r\n            <Menu.Item key={md.key}>\r\n                <Link to={md.path}>\r\n                    <FAIcon type={md.icon}/>\r\n                    <span className=\"admin-header-sys-menu-text\">{md.text}</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        );\r\n    }\r\n    return menuItems;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/framework/header/HeaderMenuUtil.jsx\n **/","import React from 'react';\r\nimport {message, Breadcrumb,Spin, QueueAnim} from 'antd';\r\nimport {Link} from 'react-router';\r\nimport {getCurrentHeaderMenu} from '../header/HeaderMenuUtil';\r\nimport {getCurrentSidebarMenu} from '../sidebar/SidebarMenuUtil'\r\nimport Settings from '../settings/Settings'\r\nimport PubSubMsg from '../../common/pubsubmsg';\r\nclass Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        pageHeader: '',\r\n        showPageAnimate: Settings.pageAnimate()\r\n    };\r\n    static defaultProps = {\r\n        loading: false,\r\n        animConfig: [\r\n            {opacity: [1, 0], translateY: [0, 50]},\r\n            {opacity: [1, 0], translateY: [0, -50]}\r\n        ]\r\n    };\r\n\r\n    getPageHeaderDateByMenu() {\r\n        let currentMenu = getCurrentSidebarMenu();\r\n        let parentText = currentMenu ? currentMenu.parentText : [];\r\n        let title = currentMenu ? currentMenu.text : '';\r\n        let breadcrumbItems = [];\r\n        for (let i = 0; i < parentText.length; i++) {\r\n            breadcrumbItems.push({text: parentText[i]});\r\n        }\r\n        breadcrumbItems.push({text: title});\r\n        return {\r\n            title,\r\n            breadcrumbItems\r\n        };\r\n    }\r\n\r\n    setPageHeader() {\r\n        let pageHeaderJsx = '';\r\n        let pageHeaderDate = null;\r\n        if (this.props.header === 'auto') {\r\n            pageHeaderDate = this.getPageHeaderDateByMenu();\r\n        } else if (typeof this.props.header == 'object') {\r\n            if (this.props.header.title || this.props.header.breadcrumbItems) {\r\n                pageHeaderDate = {};\r\n                if (this.props.header.title === 'auto') {\r\n                    pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\r\n                } else if (this.props.header.title) {\r\n                    pageHeaderDate.title = this.props.header.title;\r\n                } else {\r\n                    pageHeaderDate.title = ' ';\r\n                }\r\n                if (this.props.header.breadcrumbItems === 'auto') {\r\n                    pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems\r\n                } else if (this.props.header.breadcrumbItems) {\r\n                    pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\r\n                } else {\r\n                    pageHeaderDate.breadcrumbItems = ''\r\n                }\r\n            } else {\r\n                if (this.state.showPageAnimate) {\r\n                    pageHeaderJsx =\r\n                        <div className=\"admin-page-header\">\r\n                            <QueueAnim animConfig={this.props.animConfig}>\r\n                                <div key='queue-anim-item1'>\r\n                                    {this.props.header}\r\n                                </div>\r\n                            </QueueAnim>\r\n                        </div>\r\n                } else {\r\n                    pageHeaderJsx =\r\n                        <div className=\"admin-page-header\">\r\n                            {this.props.header}\r\n                        </div>\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pageHeaderDate) {\r\n            let currentHeaderMenu = getCurrentHeaderMenu();\r\n            let breadcrumbItems = [];\r\n            if (currentHeaderMenu) {\r\n                breadcrumbItems.push(\r\n                    <Breadcrumb.Item key=\"page-breadcrumb-item-home\"><Link to={currentHeaderMenu.path}>{currentHeaderMenu.text}</Link></Breadcrumb.Item>\r\n                );\r\n            }\r\n            let items = pageHeaderDate.breadcrumbItems;\r\n            for (let i = 0; i < items.length; i++) {\r\n                let item = items[i];\r\n                let key = 'page-breadcrumb-item' + i;\r\n                breadcrumbItems.push(\r\n                    item.path ? <Breadcrumb.Item key={key}><Link to={item.path}>{item.text}</Link></Breadcrumb.Item>\r\n                        : <Breadcrumb.Item key={key}>{item.text}</Breadcrumb.Item>\r\n                );\r\n            }\r\n            let breadcrumb = '';\r\n            if (pageHeaderDate.breadcrumbItems) {\r\n                breadcrumb =\r\n                    <Breadcrumb>\r\n                        {breadcrumbItems}\r\n                    </Breadcrumb>;\r\n            }\r\n            if (this.state.showPageAnimate) {\r\n                pageHeaderJsx =\r\n                    <div className=\"admin-page-header\">\r\n                        <QueueAnim animConfig={this.props.animConfig}>\r\n                            <div key='queue-anim-item1'>\r\n                                <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\r\n                                {breadcrumb}\r\n                            </div>\r\n                        </QueueAnim>\r\n                    </div>;\r\n            } else {\r\n                pageHeaderJsx =\r\n                    <div className=\"admin-page-header\">\r\n                        <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\r\n                        {breadcrumb}\r\n                    </div>;\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            pageHeader: pageHeaderJsx\r\n        });\r\n    }\r\n\r\n    switchLoadingMessage() {\r\n\r\n        if (this.props.loading) {\r\n            if (!this.hideLoading) {\r\n                //this.hideLoading = message.loading('正在加载...', 0);\r\n            }\r\n        } else {\r\n            if (this.hideLoading) {\r\n                this.hideLoading();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        this.switchLoadingMessage();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.switchLoadingMessage();\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (super.componentDidMount) {\r\n            super.componentDidMount();\r\n        }\r\n        let _this = this;\r\n        PubSubMsg.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\r\n            _this.setPageHeader();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.hideLoading) {\r\n            this.hideLoading();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let pageChildren =\r\n            <Spin spining={this.props.loading}>\r\n                {this.props.children}\r\n            </Spin>;\r\n        if (this.state.showPageAnimate) {\r\n            pageChildren =\r\n                <QueueAnim animConfig={this.props.animConfig} delay={100}>\r\n                    <div key='queue-anim-item1'>\r\n                        {pageChildren}\r\n                    </div>\r\n                </QueueAnim>\r\n        }\r\n        return (\r\n            <div className={\"admin-page \"}>\r\n                <div className=\"admin-page-content\">\r\n                    <div className=\"admin-page-content-inner\">\r\n                        {this.state.pageHeader}\r\n                        {pageChildren}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/framework/page/Page.jsx\n **/","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null != obj && 'object' == typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/is-object.js\n ** module id = 41\n ** module chunks = 0 5 6\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 54\n ** module chunks = 0 5 6\n **/","module.exports = FormData;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/form-data/lib/browser.js\n ** module id = 57\n ** module chunks = 0 5 6\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-component/index.js\n ** module id = 65\n ** module chunks = 0 5 6\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and \n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename || file.name);\n  return this;\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 66\n ** module chunks = 0 5 6\n **/","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\nvar FormData = require('form-data'); // browserify compatible\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  if (!this._formData) this._formData = new FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request-base.js\n ** module id = 67\n ** module chunks = 0 5 6\n **/","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request.js\n ** module id = 68\n ** module chunks = 0 5 6\n **/","import './style.less';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {message, Breadcrumb, Button } from 'antd'\r\nimport Page from '../../framework/page/Page';\r\nimport Request from 'superagent';\r\n/*\r\n * 更新state之后触发的方法:\r\n * shouldComponentUpdate\r\n * componentWillUpdate\r\n * render\r\n * componentDidUpdate\r\n *\r\n * 向DOM中加入组件触发的方法:\r\n * getDefaultProps //在组件类创建的时候调用一次,以后在向DOM中添加组件就不会调用此方法.\r\n * getInitialState\r\n * componentWillMount\r\n * render\r\n * componentDidMount //发送 AJAX 请求，可以在该方法中执行这些操作\r\n *\r\n * 组件从 DOM 中移除的时候立刻被调用\r\n * componentWillUnmount\r\n * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\r\n * componentWillReceiveProps\r\n *\r\n *\r\n * */\r\n\r\n/*\r\n * 组件是 React 里复用代码最佳方式，但是有时一些复杂的组件间也需要共用一些功能。\r\n * 有时会被称为 跨切面关注点。React 使用 mixins 来解决这类问题。\r\n * */\r\nlet RequestMixin = {\r\n    getInitialState(){\r\n        return {\r\n            loading: false\r\n        }\r\n    },\r\n    componentDidMount(){\r\n        this.requests = [];\r\n    },\r\n    requests: [],\r\n    fetch(options){\r\n        let defaultOptions = {\r\n            url: '',\r\n            data: {},\r\n            end(){\r\n            }\r\n        };\r\n        options = Object.assign(defaultOptions, options);\r\n        let that = this;\r\n        that.setState({\r\n            loading: true\r\n        });\r\n        let re = Request\r\n            .get(options.url)\r\n            .query(options.data)\r\n            .end(function (err, res) {\r\n                options.end(err, res);\r\n                that.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        this.requests.push(re);\r\n    },\r\n    componentWillUnmount(){\r\n        console.log(this.requests.length);\r\n        for (let i = 0; i < this.requests.length; i++) {\r\n            let r = this.requests[i];\r\n            r.abort();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst Dashboard = React.createClass({\r\n    /*\r\n     * 在组件挂载之前调用一次。返回值将会作为 this.state 的初始值。\r\n     * */\r\n    getInitialState(){\r\n        //console.log('getInitialState');\r\n        return {\r\n            seconds: 0,\r\n            testAjax: 'testAjax'\r\n        }\r\n    },\r\n    /*\r\n     * 在组件类创建的时候调用一次，然后返回值被缓存下来。\r\n     * 如果父组件没有指定 props 中的某个键，则此处返回的对象中的相应属性将会合并到 this.props （使用 in 检测属性）。\r\n     * */\r\n    getDefaultProps(){\r\n        //console.log('getDefaultProps');\r\n        return {\r\n            test: 'I\\'m a test'\r\n        }\r\n    },\r\n    /*\r\n     * 指定props类型,如果类型不对,浏览器控制台会输出警告,但是不会抛错.\r\n     * */\r\n    propTypes: {\r\n        test: React.PropTypes.string\r\n    },\r\n    /*\r\n     * 引用 mixin\r\n     * */\r\n    mixins: [RequestMixin],\r\n    /*\r\n     * statics 对象允许你定义静态的方法，这些静态的方法可以在组件类上调用。\r\n     * 调用方法:Dashboard.customMethod('bar')\r\n     *\r\n     * 在这个块儿里面定义的方法都是静态的，意味着你可以在任何组件实例创建之前调用它们，这些方法不能获取组件的 props 和 state。\r\n     * 如果你想在静态方法中检查 props 的值，在调用处把 props 作为参数传入到静态方法。\r\n     * */\r\n    statics: {\r\n        customMethod: function (foo) {\r\n            return foo === 'bar';\r\n        }\r\n    },\r\n    /*\r\n     * 服务器端和客户端都只调用一次，在初始化渲染执行之前立刻调用。\r\n     * 如果在这个方法内调用 setState，render() 将会感知到更新后的 state，将会执行仅一次，尽管 state 改变了。\r\n     * */\r\n    componentWillMount(){\r\n        //console.log('componentWillMount');\r\n    },\r\n    /*\r\n     * 在初始化渲染执行之后立刻调用一次，仅客户端有效（服务器端不会调用）。\r\n     * 在生命周期中的这个时间点，组件拥有一个 DOM 展现，你可以通过 this.getDOMNode()(过时了,新语法使用：ReactDOM.findDOMNode(this) ) 来获取相应 DOM 节点。\r\n     *\r\n     * 如果想和其它 JavaScript 框架集成，使用 setTimeout 或者 setInterval 来设置定时器，或者发送 AJAX 请求，可以在该方法中执行这些操作。\r\n     * */\r\n    componentDidMount: function () {\r\n        let _this = this;\r\n        _this.fetch({\r\n            url:'/dashboard.json',\r\n            data:{query: 'Manny', range: '1..5', order: 'desc', delay: 1000},\r\n            end(err, res) {\r\n                console.log('use superagent', res.body);\r\n                _this.setState({\r\n                    testAjax: res.body.name\r\n                });\r\n            }\r\n        });\r\n        _this.fetch({\r\n            url:'/dashboard.json',\r\n            data:{query: 'Manny', range: '1..5', order: 'desc', delay: 3000},\r\n            end(err, res) {\r\n                console.log('use superagent', res.body);\r\n                _this.setState({\r\n                    testAjax: '3000延迟的Ajax'\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     * 在接收到新的 props 或者 state，将要渲染之前调用。该方法在初始化渲染的时候不会调用，在使用 forceUpdate 方法的时候也不会。\r\n     * 如果确定新的 props 和 state 不会导致组件更新，则此处应该 返回 false。\r\n     * */\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        //console.log('shouldComponentUpdate');\r\n        return true;\r\n    },\r\n    /*\r\n     * 在接收到新的 props 或者 state 之前立刻调用。在初始化渲染的时候该方法不会被调用。\r\n     * 使用该方法做一些更新之前的准备工作。\r\n     * */\r\n    componentWillUpdate(nextProps, nextState){\r\n        //console.log('componentWillUpdate');\r\n\r\n    },\r\n    /*\r\n     * 在组件的更新已经同步到 DOM 中之后立刻被调用。该方法不会在初始化渲染的时候调用。\r\n     * 使用该方法可以在组件更新之后操作 DOM 元素。\r\n     * */\r\n    componentDidUpdate(prevProps, prevState){\r\n        //console.log('componentDidUpdate');\r\n    },\r\n    /*\r\n     * 在组件从 DOM 中移除的时候立刻被调用。\r\n     * 在该方法中执行任何必要的清理，比如无效的定时器，或者清除在 componentDidMount 中创建的 DOM 元素。\r\n     * 清理未返回的ajax??\r\n     * */\r\n    componentWillUnmount(){\r\n        //console.log('componentWillUnmount');\r\n    },\r\n    /*\r\n     * 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。\r\n     * 用此函数可以作为 react 在 prop 传入之后， render() 渲染之前更新 state 的机会。老的 props 可以通过 this.props 获取到。\r\n     * 在该函数中调用 this.setState() 将不会引起第二次渲染。\r\n     * */\r\n    componentWillReceiveProps(nextProps){\r\n        //console.log('componentWillReceiveProps');\r\n    },\r\n    tick: function () {\r\n        this.setState({seconds: this.state.seconds + 1});\r\n    },\r\n    handleClick(){\r\n        let that = this;\r\n        that.get('/dashboard.json', {\r\n            end(err, res) {\r\n                console.log(err, res);\r\n                console.log(res.body);\r\n                that.setState({\r\n                    testAjax: res.body.name\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     * 调用this.setState函数会出发render函数，\r\n     * 不要在render函数内部调用this.setState会导致死循环！！！\r\n     *\r\n     * */\r\n    render() {\r\n        //console.log('render');\r\n        return (\r\n            <Page header=\"auto\" loading={this.state.loading}>\r\n                <div className=\"dashboard\">\r\n                    <Button type=\"primary\" onClick={this.handleClick}>发起ajax请求</Button>\r\n                    <Button>次按钮</Button>\r\n                    <Button type=\"ghost\">幽灵按钮</Button>\r\n                    <Button type=\"dashed\">虚线按钮</Button>\r\n                    <p>npm run dev-server 运行一个静态文件服务器 并且打开默认浏览器！</p>\r\n                    <p>开发过程中，修改文件，浏览器会自动刷新，特别适合双屏/大屏开发！</p>\r\n                    <p>随着项目复杂度的增加，不知道会不会慢。目前的相应速度还是可以接受的。</p>\r\n                    <p>{this.props.test}</p>\r\n                    <p>\r\n                        React has been running for {this.state.seconds} seconds.\r\n                    </p>\r\n                    <p>ajax result: {this.state.testAjax}</p>\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n});\r\nexport default Dashboard;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/dashboard/Dashboard.jsx\n **/"],"sourceRoot":""}