{"version":3,"sources":["webpack:///1.js","webpack:///./src/framework/page/Page.jsx?1ba2*","webpack:///./src/page/validation-demo/ValidationDemo.jsx"],"names":["webpackJsonp",10,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","Object","defineProperty","value","_react","_react2","_antd","_reactRouter","_HeaderMenu","_SidebarMenu","_Settings","_Settings2","_pubsubmsg","_pubsubmsg2","Page","createClass","displayName","getInitialState","pageHeader","showPageAnimate","pageAnimate","getDefaultProps","loading","animConfig","opacity","translateY","getPageHeaderDateByMenu","currentMenu","getCurrentSidebarMenu","parentText","title","text","breadcrumbItems","i","length","push","setPageHeader","pageHeaderJsx","pageHeaderDate","this","props","header","state","createElement","className","QueueAnim","key","currentHeaderMenu","getCurrentHeaderMenu","Breadcrumb","Item","Link","to","path","items","item","breadcrumb","setState","switchLoadingMessage","hideLoading","componentWillUpdate","componentDidUpdate","componentWillMount","componentDidMount","_this","subscribeOnceAcceptOldMsg","componentWillUnmount","render","pageChildren","Spin","spining","children","delay",11,88,"cx","classNames","keys","filter","join","Array","prototype","call","arguments","noop","_Page","_Page2","Validator","Validation","FormItem","Form","ValidationDemo","mixins","FieldMixin","status","email","name","passwd","rePasswd","textarea","formData","undefined","isEmailOver","emailValidateMethod","renderValidateStyle","classes","error","errors","validating","isValidating","success","handleEmailInputBlur","handleEmailInputFocus","handleReset","e","refs","validation","reset","preventDefault","handleSubmit","validate","valid","console","log","userExists","rule","callback","setTimeout","Error","checkPass","forceValidate","checkPass2","help","field","labelCol","span","wrapperCol","horizontal","ref","onValidate","handleValidate","label","id","validateStatus","hasFeedback","required","rules","min","message","validator","Input","placeholder","onChange","setField","bind","type","trigger","onBlur","onFocus","whitespace","onContextMenu","onPaste","onCopy","onCut","autoComplete","offset","Button","onClick"],"mappings":"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","file":"1.js","sourcesContent":["webpackJsonp([1,12],{\n\n/***/ 10:\n/*!*************************************!*\\\n  !*** ./src/framework/page/Page.jsx ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(/*! ./style.less */ 11);\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 9);\n\t\n\tvar _reactRouter = __webpack_require__(/*! react-router */ 13);\n\t\n\tvar _HeaderMenu = __webpack_require__(/*! ../HeaderMenu */ 22);\n\t\n\tvar _SidebarMenu = __webpack_require__(/*! ../SidebarMenu */ 20);\n\t\n\tvar _Settings = __webpack_require__(/*! ../settings/Settings */ 15);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _pubsubmsg = __webpack_require__(/*! ../common/pubsubmsg */ 16);\n\t\n\tvar _pubsubmsg2 = _interopRequireDefault(_pubsubmsg);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Page = _react2.default.createClass({\n\t    displayName: 'Page',\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            pageHeader: '',\n\t            showPageAnimate: _Settings2.default.pageAnimate()\n\t        };\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            loading: false,\n\t            animConfig: [{ opacity: [1, 0], translateY: [0, 50] }, { opacity: [1, 0], translateY: [0, -50] }]\n\t        };\n\t    },\n\t    getPageHeaderDateByMenu: function getPageHeaderDateByMenu() {\n\t        var currentMenu = (0, _SidebarMenu.getCurrentSidebarMenu)();\n\t        var parentText = currentMenu ? currentMenu.parentText : [];\n\t        var title = currentMenu ? currentMenu.text : '';\n\t        var breadcrumbItems = [];\n\t        for (var i = 0; i < parentText.length; i++) {\n\t            breadcrumbItems.push({ text: parentText[i] });\n\t        }\n\t        breadcrumbItems.push({ text: title });\n\t        return {\n\t            title: title,\n\t            breadcrumbItems: breadcrumbItems\n\t        };\n\t    },\n\t    setPageHeader: function setPageHeader() {\n\t        var pageHeaderJsx = '';\n\t        var pageHeaderDate = null;\n\t        if (this.props.header === 'auto') {\n\t            pageHeaderDate = this.getPageHeaderDateByMenu();\n\t        } else if (_typeof(this.props.header) == 'object') {\n\t            if (this.props.header.title || this.props.header.breadcrumbItems) {\n\t                pageHeaderDate = {};\n\t                if (this.props.header.title === 'auto') {\n\t                    pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\n\t                } else if (this.props.header.title) {\n\t                    pageHeaderDate.title = this.props.header.title;\n\t                } else {\n\t                    pageHeaderDate.title = ' ';\n\t                }\n\t                if (this.props.header.breadcrumbItems === 'auto') {\n\t                    pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems;\n\t                } else if (this.props.header.breadcrumbItems) {\n\t                    pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\n\t                } else {\n\t                    pageHeaderDate.breadcrumbItems = '';\n\t                }\n\t            } else {\n\t                if (this.state.showPageAnimate) {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        _react2.default.createElement(\n\t                            _antd.QueueAnim,\n\t                            { animConfig: this.props.animConfig },\n\t                            _react2.default.createElement(\n\t                                'div',\n\t                                { key: 'queue-anim-item1' },\n\t                                this.props.header\n\t                            )\n\t                        )\n\t                    );\n\t                } else {\n\t                    pageHeaderJsx = _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'admin-page-header' },\n\t                        this.props.header\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        if (pageHeaderDate) {\n\t            var currentHeaderMenu = (0, _HeaderMenu.getCurrentHeaderMenu)();\n\t            var breadcrumbItems = [];\n\t            if (currentHeaderMenu) {\n\t                breadcrumbItems.push(_react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: 'page-breadcrumb-item-home' },\n\t                    _react2.default.createElement(\n\t                        _reactRouter.Link,\n\t                        { to: currentHeaderMenu.path },\n\t                        currentHeaderMenu.text\n\t                    )\n\t                ));\n\t            }\n\t            var items = pageHeaderDate.breadcrumbItems;\n\t            for (var i = 0; i < items.length; i++) {\n\t                var item = items[i];\n\t                var key = 'page-breadcrumb-item' + i;\n\t                breadcrumbItems.push(item.path ? _react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: key },\n\t                    _react2.default.createElement(\n\t                        _reactRouter.Link,\n\t                        { to: item.path },\n\t                        item.text\n\t                    )\n\t                ) : _react2.default.createElement(\n\t                    _antd.Breadcrumb.Item,\n\t                    { key: key },\n\t                    item.text\n\t                ));\n\t            }\n\t            var breadcrumb = '';\n\t            if (pageHeaderDate.breadcrumbItems) {\n\t                breadcrumb = _react2.default.createElement(\n\t                    _antd.Breadcrumb,\n\t                    null,\n\t                    breadcrumbItems\n\t                );\n\t            }\n\t            if (this.state.showPageAnimate) {\n\t                pageHeaderJsx = _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-header' },\n\t                    _react2.default.createElement(\n\t                        _antd.QueueAnim,\n\t                        { animConfig: this.props.animConfig },\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { key: 'queue-anim-item1' },\n\t                            _react2.default.createElement(\n\t                                'h1',\n\t                                { className: 'admin-page-header-title' },\n\t                                pageHeaderDate.title\n\t                            ),\n\t                            breadcrumb\n\t                        )\n\t                    )\n\t                );\n\t            } else {\n\t                pageHeaderJsx = _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-header' },\n\t                    _react2.default.createElement(\n\t                        'h1',\n\t                        { className: 'admin-page-header-title' },\n\t                        pageHeaderDate.title\n\t                    ),\n\t                    breadcrumb\n\t                );\n\t            }\n\t        }\n\t        this.setState({\n\t            pageHeader: pageHeaderJsx\n\t        });\n\t    },\n\t    switchLoadingMessage: function switchLoadingMessage() {\n\t\n\t        if (this.props.loading) {\n\t            if (!this.hideLoading) {\n\t                //this.hideLoading = message.loading('正在加载...', 0);\n\t            }\n\t        } else {\n\t                if (this.hideLoading) {\n\t                    this.hideLoading();\n\t                }\n\t            }\n\t    },\n\t    componentWillUpdate: function componentWillUpdate() {\n\t        this.switchLoadingMessage();\n\t    },\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        this.switchLoadingMessage();\n\t    },\n\t    componentWillMount: function componentWillMount() {},\n\t    componentDidMount: function componentDidMount() {\n\t        var _this = this;\n\t        _pubsubmsg2.default.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\n\t            _this.setPageHeader();\n\t        });\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        if (this.hideLoading) {\n\t            this.hideLoading();\n\t        }\n\t    },\n\t    render: function render() {\n\t        var pageChildren = _react2.default.createElement(\n\t            _antd.Spin,\n\t            { spining: this.props.loading },\n\t            this.props.children\n\t        );\n\t        if (this.state.showPageAnimate) {\n\t            pageChildren = _react2.default.createElement(\n\t                _antd.QueueAnim,\n\t                { animConfig: this.props.animConfig, delay: 100 },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { key: 'queue-anim-item1' },\n\t                    pageChildren\n\t                )\n\t            );\n\t        }\n\t        return _react2.default.createElement(\n\t            'div',\n\t            { className: \"admin-page \" },\n\t            _react2.default.createElement(\n\t                'div',\n\t                { className: 'admin-page-content' },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'admin-page-content-inner' },\n\t                    this.state.pageHeader,\n\t                    pageChildren\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\texports.default = Page;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 11:\n/*!***************************************!*\\\n  !*** ./src/framework/page/style.less ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 88:\n/*!*****************************************************!*\\\n  !*** ./src/page/validation-demo/ValidationDemo.jsx ***!\n  \\*****************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _react = __webpack_require__(/*! react */ 1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _antd = __webpack_require__(/*! antd */ 9);\n\t\n\tvar _reactRouter = __webpack_require__(/*! react-router */ 13);\n\t\n\tvar _Page = __webpack_require__(/*! ../../framework/page/Page */ 10);\n\t\n\tvar _Page2 = _interopRequireDefault(_Page);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Validator = _antd.Validation.Validator;\n\tvar FormItem = _antd.Form.Item;\n\t\n\tfunction cx(classNames) {\n\t    if ((typeof classNames === 'undefined' ? 'undefined' : _typeof(classNames)) === 'object') {\n\t        return Object.keys(classNames).filter(function (className) {\n\t            return classNames[className];\n\t        }).join(' ');\n\t    } else {\n\t        return Array.prototype.join.call(arguments, ' ');\n\t    }\n\t}\n\t\n\tfunction noop() {\n\t    return false;\n\t}\n\t\n\tvar ValidationDemo = _react2.default.createClass({\n\t    displayName: 'ValidationDemo',\n\t\n\t    mixins: [_antd.Validation.FieldMixin],\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            status: {\n\t                email: {},\n\t                name: {},\n\t                passwd: {},\n\t                rePasswd: {},\n\t                textarea: {}\n\t            },\n\t            formData: {\n\t                email: undefined,\n\t                name: undefined,\n\t                passwd: undefined,\n\t                rePasswd: undefined,\n\t                textarea: undefined\n\t            },\n\t            isEmailOver: false, // email 是否输入完毕\n\t            emailValidateMethod: 'onBlur' // 用于改变 email 的验证方法\n\t        };\n\t    },\n\t    renderValidateStyle: function renderValidateStyle(item) {\n\t        var formData = this.state.formData;\n\t        var status = this.state.status;\n\t\n\t        var classes = cx({\n\t            'error': status[item].errors,\n\t            'validating': status[item].isValidating,\n\t            'success': formData[item] && !status[item].errors && !status[item].isValidating\n\t        });\n\t\n\t        return classes;\n\t    },\n\t    handleEmailInputBlur: function handleEmailInputBlur() {\n\t        this.setState({\n\t            isEmailOver: true\n\t        });\n\t    },\n\t    handleEmailInputFocus: function handleEmailInputFocus() {\n\t        if (this.state.isEmailOver) {\n\t            this.setState({\n\t                emailValidateMethod: 'onChange'\n\t            });\n\t        }\n\t    },\n\t    handleReset: function handleReset(e) {\n\t        this.refs.validation.reset();\n\t        this.setState(this.getInitialState());\n\t        e.preventDefault();\n\t    },\n\t    handleSubmit: function handleSubmit(e) {\n\t        var _this = this;\n\t\n\t        e.preventDefault();\n\t        this.setState({\n\t            isEmailOver: true\n\t        });\n\t        var validation = this.refs.validation;\n\t        validation.validate(function (valid) {\n\t            if (!valid) {\n\t                console.log('error in form');\n\t                return;\n\t            } else {\n\t                console.log('submit');\n\t            }\n\t            console.log(_this.state.formData);\n\t        });\n\t    },\n\t    userExists: function userExists(rule, value, callback) {\n\t        if (!value) {\n\t            callback();\n\t        } else {\n\t            setTimeout(function () {\n\t                if (value === 'JasonWood') {\n\t                    callback([new Error('抱歉，该用户名已被占用。')]);\n\t                } else {\n\t                    callback();\n\t                }\n\t            }, 800);\n\t        }\n\t    },\n\t    checkPass: function checkPass(rule, value, callback) {\n\t        if (this.state.formData.passwd) {\n\t            this.refs.validation.forceValidate(['rePasswd']);\n\t        }\n\t\n\t        callback();\n\t    },\n\t    checkPass2: function checkPass2(rule, value, callback) {\n\t        if (value && value !== this.state.formData.passwd) {\n\t            callback('两次输入密码不一致！');\n\t        } else {\n\t            callback();\n\t        }\n\t    },\n\t    render: function render() {\n\t        var formData = this.state.formData;\n\t        var status = this.state.status;\n\t        /*\n\t         * 一共24份？\n\t         * */\n\t        var labelCol = { span: 7 };\n\t        var wrapperCol = { span: 12 };\n\t\n\t        function help(field) {\n\t            return status[field].errors ? status[field].errors.join(',') : null;\n\t        }\n\t        var pageHeader = {\n\t            title: '表单校验',\n\t            breadcrumbItems: [{ text: '某应用' }, { text: '我的时间', path: '/myTime3' }, { text: '表单校验' }]\n\t        };\n\t        return _react2.default.createElement(\n\t            _Page2.default,\n\t            { header: pageHeader },\n\t            _react2.default.createElement(\n\t                _antd.Form,\n\t                { horizontal: true },\n\t                _react2.default.createElement(\n\t                    _antd.Validation,\n\t                    { ref: 'validation', onValidate: this.handleValidate },\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            label: '用户名：',\n\t                            id: 'name',\n\t                            labelCol: labelCol,\n\t                            wrapperCol: wrapperCol,\n\t                            validateStatus: this.renderValidateStyle('name'),\n\t                            hasFeedback: true,\n\t                            help: status.name.isValidating ? '正在校验中..' : help('name'),\n\t                            required: true },\n\t                        _react2.default.createElement(\n\t                            Validator,\n\t                            { rules: [{ required: true, min: 5, message: '用户名至少为 5 个字符' }, { validator: this.userExists }] },\n\t                            _react2.default.createElement(_antd.Input, { name: 'name', id: 'name', value: formData.name, placeholder: '实时校验，输入 JasonWood 看看', onChange: this.setField.bind(this, 'name') })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            label: '邮箱：',\n\t                            id: 'email',\n\t                            labelCol: labelCol,\n\t                            wrapperCol: wrapperCol,\n\t                            validateStatus: this.renderValidateStyle('email'),\n\t                            hasFeedback: this.state.isEmailOver,\n\t                            help: help('email'),\n\t                            required: true },\n\t                        _react2.default.createElement(\n\t                            Validator,\n\t                            { rules: [{ required: true, type: 'email', message: '请输入正确的邮箱地址' }], trigger: this.state.emailValidateMethod },\n\t                            _react2.default.createElement(_antd.Input, { type: 'email', name: 'email', id: 'email', value: formData.email, placeholder: 'onBlur 与 onChange 相结合', onBlur: this.handleEmailInputBlur, onFocus: this.handleEmailInputFocus })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            label: '密码：',\n\t                            id: 'password',\n\t                            labelCol: labelCol,\n\t                            wrapperCol: wrapperCol,\n\t                            validateStatus: this.renderValidateStyle('passwd'),\n\t                            hasFeedback: true,\n\t                            help: help('passwd'),\n\t                            required: true },\n\t                        _react2.default.createElement(\n\t                            Validator,\n\t                            { rules: [{ required: true, whitespace: true, message: '请填写密码' }, { validator: this.checkPass }] },\n\t                            _react2.default.createElement(_antd.Input, { name: 'passwd', id: 'password', type: 'password', onContextMenu: noop, onPaste: noop, onCopy: noop, onCut: noop, autoComplete: 'off', value: formData.passwd })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            label: '确认密码：',\n\t                            id: 'password2',\n\t                            labelCol: labelCol,\n\t                            wrapperCol: wrapperCol,\n\t                            validateStatus: this.renderValidateStyle('rePasswd'),\n\t                            hasFeedback: true,\n\t                            help: help('rePasswd'),\n\t                            required: true },\n\t                        _react2.default.createElement(\n\t                            Validator,\n\t                            { rules: [{ required: true, whitespace: true, message: '请再次输入密码' }, { validator: this.checkPass2 }] },\n\t                            _react2.default.createElement(_antd.Input, { name: 'rePasswd', id: 'password2', type: 'password', onContextMenu: noop, onPaste: noop, onCopy: noop, onCut: noop, autoComplete: 'off', value: formData.rePasswd, placeholder: '两次输入密码保持一致' })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            label: '备注：',\n\t                            id: 'textarea',\n\t                            labelCol: labelCol,\n\t                            wrapperCol: wrapperCol,\n\t                            validateStatus: this.renderValidateStyle('textarea'),\n\t                            help: help('textarea'),\n\t                            required: true },\n\t                        _react2.default.createElement(\n\t                            Validator,\n\t                            { rules: [{ required: true, message: '真的不打算写点什么吗？' }] },\n\t                            _react2.default.createElement(_antd.Input, { type: 'textarea', placeholder: '随便写', id: 'textarea', name: 'textarea', value: formData.textarea })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        FormItem,\n\t                        {\n\t                            wrapperCol: { span: 12, offset: labelCol.span } },\n\t                        _react2.default.createElement(\n\t                            _antd.Button,\n\t                            { type: 'primary', onClick: this.handleSubmit },\n\t                            '确定'\n\t                        ),\n\t                        '   ',\n\t                        _react2.default.createElement(\n\t                            _antd.Button,\n\t                            { type: 'ghost', onClick: this.handleReset },\n\t                            '重置'\n\t                        )\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\texports.default = ValidationDemo;\n\tmodule.exports = exports['default'];\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1.js\n **/","import './style.less';\nimport React from 'react';\nimport {message, Breadcrumb,Spin, QueueAnim} from 'antd';\nimport {Link} from 'react-router';\nimport {getCurrentHeaderMenu} from '../HeaderMenu';\nimport {getCurrentSidebarMenu} from '../SidebarMenu'\nimport Settings from '../settings/Settings'\nimport PubSubMsg from '../common/pubsubmsg';\nconst Page = React.createClass({\n    getInitialState(){\n        return {\n            pageHeader: '',\n            showPageAnimate: Settings.pageAnimate()\n        }\n    },\n    getDefaultProps(){\n        return {\n            loading: false,\n            animConfig: [\n                {opacity: [1, 0], translateY: [0, 50]},\n                {opacity: [1, 0], translateY: [0, -50]}\n            ]\n        }\n    },\n    getPageHeaderDateByMenu(){\n        let currentMenu = getCurrentSidebarMenu();\n        let parentText = currentMenu ? currentMenu.parentText : [];\n        let title = currentMenu ? currentMenu.text : '';\n        let breadcrumbItems = [];\n        for (let i = 0; i < parentText.length; i++) {\n            breadcrumbItems.push({text: parentText[i]});\n        }\n        breadcrumbItems.push({text: title});\n        return {\n            title,\n            breadcrumbItems\n        };\n    },\n    setPageHeader(){\n        let pageHeaderJsx = '';\n        let pageHeaderDate = null;\n        if (this.props.header === 'auto') {\n            pageHeaderDate = this.getPageHeaderDateByMenu();\n        } else if (typeof this.props.header == 'object') {\n            if (this.props.header.title || this.props.header.breadcrumbItems) {\n                pageHeaderDate = {};\n                if (this.props.header.title === 'auto') {\n                    pageHeaderDate.title = this.getPageHeaderDateByMenu().title;\n                } else if (this.props.header.title) {\n                    pageHeaderDate.title = this.props.header.title;\n                } else {\n                    pageHeaderDate.title = ' ';\n                }\n                if (this.props.header.breadcrumbItems === 'auto') {\n                    pageHeaderDate.breadcrumbItems = this.getPageHeaderDateByMenu().breadcrumbItems\n                } else if (this.props.header.breadcrumbItems) {\n                    pageHeaderDate.breadcrumbItems = this.props.header.breadcrumbItems;\n                } else {\n                    pageHeaderDate.breadcrumbItems = ''\n                }\n            } else {\n                if (this.state.showPageAnimate) {\n                    pageHeaderJsx =\n                        <div className=\"admin-page-header\">\n                            <QueueAnim animConfig={this.props.animConfig}>\n                                <div key='queue-anim-item1'>\n                                    {this.props.header}\n                                </div>\n                            </QueueAnim>\n                        </div>\n                } else {\n                    pageHeaderJsx =\n                        <div className=\"admin-page-header\">\n                            {this.props.header}\n                        </div>\n                }\n\n            }\n\n        }\n        if (pageHeaderDate) {\n            let currentHeaderMenu = getCurrentHeaderMenu();\n            let breadcrumbItems = [];\n            if (currentHeaderMenu) {\n                breadcrumbItems.push(\n                    <Breadcrumb.Item key=\"page-breadcrumb-item-home\"><Link to={currentHeaderMenu.path}>{currentHeaderMenu.text}</Link></Breadcrumb.Item>\n                );\n            }\n            let items = pageHeaderDate.breadcrumbItems;\n            for (let i = 0; i < items.length; i++) {\n                let item = items[i];\n                let key = 'page-breadcrumb-item' + i;\n                breadcrumbItems.push(\n                    item.path ? <Breadcrumb.Item key={key}><Link to={item.path}>{item.text}</Link></Breadcrumb.Item>\n                        : <Breadcrumb.Item key={key}>{item.text}</Breadcrumb.Item>\n                );\n            }\n            let breadcrumb = '';\n            if (pageHeaderDate.breadcrumbItems) {\n                breadcrumb =\n                    <Breadcrumb>\n                        {breadcrumbItems}\n                    </Breadcrumb>;\n            }\n            if (this.state.showPageAnimate) {\n                pageHeaderJsx =\n                    <div className=\"admin-page-header\">\n                        <QueueAnim animConfig={this.props.animConfig}>\n                            <div key='queue-anim-item1'>\n                                <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\n                                {breadcrumb}\n                            </div>\n                        </QueueAnim>\n                    </div>;\n            } else {\n                pageHeaderJsx =\n                    <div className=\"admin-page-header\">\n                        <h1 className=\"admin-page-header-title\">{pageHeaderDate.title}</h1>\n                        {breadcrumb}\n                    </div>;\n            }\n\n        }\n        this.setState({\n            pageHeader: pageHeaderJsx\n        });\n    },\n    switchLoadingMessage(){\n\n        if (this.props.loading) {\n            if (!this.hideLoading) {\n                //this.hideLoading = message.loading('正在加载...', 0);\n            }\n        } else {\n            if (this.hideLoading) {\n                this.hideLoading();\n            }\n        }\n    },\n    componentWillUpdate(){\n        this.switchLoadingMessage();\n    },\n    componentDidUpdate(){\n        this.switchLoadingMessage();\n    },\n    componentWillMount(){\n\n    },\n    componentDidMount(){\n        let _this = this;\n        PubSubMsg.subscribeOnceAcceptOldMsg('set-header-breadcrumb', function () {\n            _this.setPageHeader();\n        });\n    },\n    componentWillUnmount(){\n        if (this.hideLoading) {\n            this.hideLoading();\n        }\n    },\n    render() {\n        let pageChildren =\n            <Spin spining={this.props.loading}>\n                {this.props.children}\n            </Spin>;\n        if (this.state.showPageAnimate) {\n            pageChildren =\n                <QueueAnim animConfig={this.props.animConfig} delay={100}>\n                    <div key='queue-anim-item1'>\n                        {pageChildren}\n                    </div>\n                </QueueAnim>\n        }\n        return (\n            <div className={\"admin-page \"}>\n                <div className=\"admin-page-content\">\n                    <div className=\"admin-page-content-inner\">\n                        {this.state.pageHeader}\n                        {pageChildren}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nexport default Page;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/framework/page/Page.jsx\n **/","import React from 'react';\nimport {Validation, Button, Form, Input, Breadcrumb} from 'antd';\nimport {Link} from 'react-router'\nimport Page from '../../framework/page/Page';\nconst Validator = Validation.Validator;\nconst FormItem = Form.Item;\n\nfunction cx(classNames) {\n    if (typeof classNames === 'object') {\n        return Object.keys(classNames).filter(function (className) {\n            return classNames[className];\n        }).join(' ');\n    } else {\n        return Array.prototype.join.call(arguments, ' ');\n    }\n}\n\nfunction noop() {\n    return false;\n}\n\nconst ValidationDemo = React.createClass({\n    mixins: [Validation.FieldMixin],\n\n    getInitialState() {\n        return {\n            status: {\n                email: {},\n                name: {},\n                passwd: {},\n                rePasswd: {},\n                textarea: {}\n            },\n            formData: {\n                email: undefined,\n                name: undefined,\n                passwd: undefined,\n                rePasswd: undefined,\n                textarea: undefined\n            },\n            isEmailOver: false, // email 是否输入完毕\n            emailValidateMethod: 'onBlur' // 用于改变 email 的验证方法\n        };\n    },\n\n    renderValidateStyle(item) {\n        const formData = this.state.formData;\n        const status = this.state.status;\n\n        const classes = cx({\n            'error': status[item].errors,\n            'validating': status[item].isValidating,\n            'success': formData[item] && !status[item].errors && !status[item].isValidating\n        });\n\n        return classes;\n    },\n\n    handleEmailInputBlur() {\n        this.setState({\n            isEmailOver: true\n        });\n    },\n\n    handleEmailInputFocus() {\n        if (this.state.isEmailOver) {\n            this.setState({\n                emailValidateMethod: 'onChange'\n            });\n        }\n    },\n\n    handleReset(e) {\n        this.refs.validation.reset();\n        this.setState(this.getInitialState());\n        e.preventDefault();\n    },\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            isEmailOver: true\n        });\n        const validation = this.refs.validation;\n        validation.validate((valid) => {\n            if (!valid) {\n                console.log('error in form');\n                return;\n            } else {\n                console.log('submit');\n            }\n            console.log(this.state.formData);\n        });\n    },\n\n    userExists(rule, value, callback) {\n        if (!value) {\n            callback();\n        } else {\n            setTimeout(function () {\n                if (value === 'JasonWood') {\n                    callback([new Error('抱歉，该用户名已被占用。')]);\n                } else {\n                    callback();\n                }\n            }, 800);\n        }\n    },\n\n    checkPass(rule, value, callback) {\n        if (this.state.formData.passwd) {\n            this.refs.validation.forceValidate(['rePasswd']);\n        }\n\n        callback();\n    },\n\n    checkPass2(rule, value, callback) {\n        if (value && value !== this.state.formData.passwd) {\n            callback('两次输入密码不一致！');\n        } else {\n            callback();\n        }\n    },\n\n    render() {\n        const formData = this.state.formData;\n        const status = this.state.status;\n        /*\n         * 一共24份？\n         * */\n        const labelCol = {span: 7};\n        const wrapperCol = {span: 12};\n\n        function help(field) {\n            return status[field].errors ? status[field].errors.join(',') : null;\n        }\n        const pageHeader = {\n            title: '表单校验',\n            breadcrumbItems: [\n                {text: '某应用'},\n                {text: '我的时间', path: '/myTime3'},\n                {text: '表单校验'}\n            ]\n        };\n        return (\n            <Page header={pageHeader}>\n                <Form horizontal>\n                    <Validation ref=\"validation\" onValidate={this.handleValidate}>\n                        <FormItem\n                            label=\"用户名：\"\n                            id=\"name\"\n                            labelCol={labelCol}\n                            wrapperCol={wrapperCol}\n                            validateStatus={this.renderValidateStyle('name')}\n                            hasFeedback\n                            help={status.name.isValidating ? '正在校验中..' : (help('name'))}\n                            required>\n                            <Validator rules={[{required: true, min: 5, message: '用户名至少为 5 个字符'}, {validator: this.userExists}]}>\n                                <Input name=\"name\" id=\"name\" value={formData.name} placeholder=\"实时校验，输入 JasonWood 看看\" onChange={this.setField.bind(this, 'name')}/>\n                            </Validator>\n                        </FormItem>\n\n                        <FormItem\n                            label=\"邮箱：\"\n                            id=\"email\"\n                            labelCol={labelCol}\n                            wrapperCol={wrapperCol}\n                            validateStatus={this.renderValidateStyle('email')}\n                            hasFeedback={this.state.isEmailOver}\n                            help={help('email')}\n                            required>\n                            <Validator rules={[{required: true, type:'email', message: '请输入正确的邮箱地址'}]} trigger={this.state.emailValidateMethod}>\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={formData.email} placeholder=\"onBlur 与 onChange 相结合\" onBlur={this.handleEmailInputBlur} onFocus={this.handleEmailInputFocus}/>\n                            </Validator>\n                        </FormItem>\n\n                        <FormItem\n                            label=\"密码：\"\n                            id=\"password\"\n                            labelCol={labelCol}\n                            wrapperCol={wrapperCol}\n                            validateStatus={this.renderValidateStyle('passwd')}\n                            hasFeedback\n                            help={help('passwd')}\n                            required>\n                            <Validator rules={[{required: true, whitespace: true, message: '请填写密码'}, {validator: this.checkPass}]}>\n                                <Input name=\"passwd\" id=\"password\" type=\"password\" onContextMenu={noop} onPaste={noop} onCopy={noop} onCut={noop} autoComplete=\"off\" value={formData.passwd}/>\n                            </Validator>\n                        </FormItem>\n\n                        <FormItem\n                            label=\"确认密码：\"\n                            id=\"password2\"\n                            labelCol={labelCol}\n                            wrapperCol={wrapperCol}\n                            validateStatus={this.renderValidateStyle('rePasswd')}\n                            hasFeedback\n                            help={help('rePasswd')}\n                            required>\n                            <Validator rules={[{required: true,whitespace: true,message: '请再次输入密码'}, {validator: this.checkPass2}]}>\n                                <Input name=\"rePasswd\" id=\"password2\" type=\"password\" onContextMenu={noop} onPaste={noop} onCopy={noop} onCut={noop} autoComplete=\"off\" value={formData.rePasswd} placeholder=\"两次输入密码保持一致\"/>\n                            </Validator>\n                        </FormItem>\n\n                        <FormItem\n                            label=\"备注：\"\n                            id=\"textarea\"\n                            labelCol={labelCol}\n                            wrapperCol={wrapperCol}\n                            validateStatus={this.renderValidateStyle('textarea')}\n                            help={help('textarea')}\n                            required>\n                            <Validator rules={[{required: true, message: '真的不打算写点什么吗？'}]}>\n                                <Input type=\"textarea\" placeholder=\"随便写\" id=\"textarea\" name=\"textarea\" value={formData.textarea}/>\n                            </Validator>\n                        </FormItem>\n\n                        <FormItem\n                            wrapperCol={{span: 12, offset: labelCol.span}}>\n                            <Button type=\"primary\" onClick={this.handleSubmit}>确定</Button>\n                            &nbsp;&nbsp;&nbsp;\n                            <Button type=\"ghost\" onClick={this.handleReset}>重置</Button>\n                        </FormItem>\n                    </Validation>\n                </Form>\n            </Page>\n        );\n    }\n});\nexport default ValidationDemo;\n\n\n/** WEBPACK FOOTER **\n ** ./src/page/validation-demo/ValidationDemo.jsx\n **/"],"sourceRoot":""}